Sandbox logs:
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nproduct name: AMETHYSTS\nstarting_position: 0",
  "timestamp": 0
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)",
  "timestamp": 100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)",
  "timestamp": 200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)",
  "timestamp": 300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)",
  "timestamp": 400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)",
  "timestamp": 500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)",
  "timestamp": 600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)",
  "timestamp": 700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)",
  "timestamp": 800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)",
  "timestamp": 900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)",
  "timestamp": 1000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)",
  "timestamp": 1100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)",
  "timestamp": 1200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)",
  "timestamp": 1300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)",
  "timestamp": 1400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)",
  "timestamp": 1500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)",
  "timestamp": 1600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)",
  "timestamp": 1700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)",
  "timestamp": 1800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)",
  "timestamp": 1900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)",
  "timestamp": 2000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)",
  "timestamp": 2100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)",
  "timestamp": 2200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)",
  "timestamp": 2300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)",
  "timestamp": 2400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)",
  "timestamp": 2500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)",
  "timestamp": 2600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)",
  "timestamp": 2700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)",
  "timestamp": 2800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)",
  "timestamp": 2900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d1957824-644b-4c29-88bf-8807389730a1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d1957824-644b-4c29-88bf-8807389730a1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 3000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)",
  "timestamp": 3100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"167ecd27-0f98-4229-8118-016e041d9323\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"167ecd27-0f98-4229-8118-016e041d9323\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 3200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)",
  "timestamp": 3300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"f4dd8ea1-3009-4404-9ac1-c3c4bf2dac47\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"f4dd8ea1-3009-4404-9ac1-c3c4bf2dac47\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 3400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)",
  "timestamp": 3500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e9f4fdc7-d020-416b-a93a-4a56811e30cc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e9f4fdc7-d020-416b-a93a-4a56811e30cc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 3600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 3700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b8b36cba-0f26-499f-81da-ab3d33e4077c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b8b36cba-0f26-499f-81da-ab3d33e4077c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 3800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 3900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 4000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 4100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 4200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"98adb0ca-7fde-4a8d-ba2f-19b93c61ccd3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"98adb0ca-7fde-4a8d-ba2f-19b93c61ccd3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 4300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"85ba6c6d-9604-4532-8f07-c394b6f64fa2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"85ba6c6d-9604-4532-8f07-c394b6f64fa2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 4400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a37ae05a-3405-4dfa-9229-03228b0de749\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a37ae05a-3405-4dfa-9229-03228b0de749\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 4500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3055c665-a77e-41da-ba85-e171ba3b081a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3055c665-a77e-41da-ba85-e171ba3b081a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 4600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c35d7a1e-06c6-4db6-baea-69533b7cd16d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c35d7a1e-06c6-4db6-baea-69533b7cd16d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 4700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"730a5997-9e1e-4593-b18a-4d8728b9afef\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"730a5997-9e1e-4593-b18a-4d8728b9afef\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 4800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"1502a21d-1aa8-4a03-a529-e2fade0b161b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"1502a21d-1aa8-4a03-a529-e2fade0b161b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 4900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 5000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"62c8dc02-799a-45c4-9474-f31ccdd7950b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"62c8dc02-799a-45c4-9474-f31ccdd7950b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 5100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 5200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 5300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7533f95b-2dfb-446c-86c0-b0222015406c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7533f95b-2dfb-446c-86c0-b0222015406c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 5400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 5500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 5600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e4bfb5a9-3b04-454b-9338-2d4e5f952f77\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e4bfb5a9-3b04-454b-9338-2d4e5f952f77\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 5700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"36364a37-9dba-4482-bd22-1da046fc11a2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"36364a37-9dba-4482-bd22-1da046fc11a2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 5800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 5900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"1a20abd9-3573-4621-92b7-c4d8fdf913dc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"1a20abd9-3573-4621-92b7-c4d8fdf913dc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 6000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"709bdfe7-8b07-4239-9b56-4678c3aed163\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"709bdfe7-8b07-4239-9b56-4678c3aed163\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 6100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c10383e0-9327-4a76-bc64-36000d32d07e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c10383e0-9327-4a76-bc64-36000d32d07e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 6200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 6300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 6400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 6500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"55ebcf06-0e24-42f9-bf99-dfa090349b0e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"55ebcf06-0e24-42f9-bf99-dfa090349b0e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 6600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c5c98f04-bcb6-43fc-b0b6-d1e814d15eb2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c5c98f04-bcb6-43fc-b0b6-d1e814d15eb2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 6700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7318d385-8b45-4df1-ab07-fe46139537bc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7318d385-8b45-4df1-ab07-fe46139537bc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 6800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"87720616-5867-4ce1-8bee-8a44c5fdd7d2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"87720616-5867-4ce1-8bee-8a44c5fdd7d2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 6900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"de3a2994-2ffa-4437-9ba7-29b342f1e77e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"de3a2994-2ffa-4437-9ba7-29b342f1e77e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 7000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"82622e17-a7a9-4c54-b615-a82f3d6fabc3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"82622e17-a7a9-4c54-b615-a82f3d6fabc3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 7100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 7200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 7300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d1bec864-3f74-4e20-a1cf-ecde28deed04\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d1bec864-3f74-4e20-a1cf-ecde28deed04\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 7400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"fbd31891-5f4e-424b-bbb1-6bef9068db7e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"fbd31891-5f4e-424b-bbb1-6bef9068db7e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 7500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 7600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"5f3c05c4-9888-491e-bc4c-8d111abc016e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"5f3c05c4-9888-491e-bc4c-8d111abc016e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 7700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"305abd1a-a835-44c6-9c89-d00a14a09ae9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"305abd1a-a835-44c6-9c89-d00a14a09ae9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 7800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 7900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 8000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 8100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 8200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 8300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 8400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 8500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"fe0bcb40-48e3-4e75-873f-3dd3fc07067e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"fe0bcb40-48e3-4e75-873f-3dd3fc07067e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 8600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b96b9238-f477-4914-a218-c04914312a5f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b96b9238-f477-4914-a218-c04914312a5f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 8700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b0327967-2112-470e-8465-404854291654\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b0327967-2112-470e-8465-404854291654\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 8800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b844717b-c658-402c-a071-ac12a66fb211\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b844717b-c658-402c-a071-ac12a66fb211\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 8900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 9000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 9100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"bff03e1c-7641-4e6c-8d4b-8a9ede71a3d7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"bff03e1c-7641-4e6c-8d4b-8a9ede71a3d7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 9200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"42269c5b-82b5-40cc-bfd5-56f3fa059735\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"42269c5b-82b5-40cc-bfd5-56f3fa059735\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 9300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 9400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 9500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 9600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 9700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 9800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 9900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"76f6686b-f8a6-40fc-b2fe-ead6a051dbe8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"76f6686b-f8a6-40fc-b2fe-ead6a051dbe8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 10000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 10100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 10200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3f5f2e5c-ec41-47a9-9f62-e2b113d527f9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3f5f2e5c-ec41-47a9-9f62-e2b113d527f9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 10300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"649f2ca3-7d93-43ce-97f8-98b808fd047d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"649f2ca3-7d93-43ce-97f8-98b808fd047d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 10400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 10500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d4b0774c-cb76-4518-b0d4-eb5f96fd74d7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d4b0774c-cb76-4518-b0d4-eb5f96fd74d7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 10600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 10700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 10800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 10900
}
{
  "sandboxLog": "Lambda errors have reached maximum value for submission 178352bb-bf0d-4379-816c-1bc34e8d55d6",
  "lambdaLog": null,
  "timestamp": 10917
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"269433fb-3251-45c9-b997-382aefa8a6f3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"269433fb-3251-45c9-b997-382aefa8a6f3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 11000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 11100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 11200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c6f4e53f-f16c-4b28-9d4b-4ee38c480d36\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c6f4e53f-f16c-4b28-9d4b-4ee38c480d36\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 11300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"aba842b7-b098-42bc-8abb-dfc310eb2044\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"aba842b7-b098-42bc-8abb-dfc310eb2044\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 11400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"0d742eae-0373-4a3f-9dd1-ef9479ea36c1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"0d742eae-0373-4a3f-9dd1-ef9479ea36c1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 11500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"10ca83b5-f44c-45da-9d0e-79644944e323\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"10ca83b5-f44c-45da-9d0e-79644944e323\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 11600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"cd774fce-1892-4817-827c-e081831950c4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"cd774fce-1892-4817-827c-e081831950c4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 11700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b5a4bc0d-8911-4611-acb5-6f7771e0a4ca\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b5a4bc0d-8911-4611-acb5-6f7771e0a4ca\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 11800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"27000d2c-9290-4af6-8a25-e9ccac9eb9d5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"27000d2c-9290-4af6-8a25-e9ccac9eb9d5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 11900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"5fe5ebae-611e-41ea-bf9e-6008649488a4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"5fe5ebae-611e-41ea-bf9e-6008649488a4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 12000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"ae993b06-29f6-4837-bbb1-3231f63d295e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"ae993b06-29f6-4837-bbb1-3231f63d295e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 12100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 12200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"1617fb70-2879-481c-893c-669b8896328e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"1617fb70-2879-481c-893c-669b8896328e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 12300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 12400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7316828b-fdc4-482e-b633-da214b1bb1e1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7316828b-fdc4-482e-b633-da214b1bb1e1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 12500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"2555fa3c-dc48-493c-b8ee-a266a2ae0646\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"2555fa3c-dc48-493c-b8ee-a266a2ae0646\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 12600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 12700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 12800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 12900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 13000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"85988bf9-2d54-4661-a294-1ab0c7f1efc9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"85988bf9-2d54-4661-a294-1ab0c7f1efc9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 13100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"736aa5c2-45f7-44fc-9ffa-22ed1c54478d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"736aa5c2-45f7-44fc-9ffa-22ed1c54478d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 13200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"22886bc5-3925-4200-bdb0-e2ef5286b3f3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"22886bc5-3925-4200-bdb0-e2ef5286b3f3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 13300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 13400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 13500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"dbff2cc7-d4aa-4bdf-812b-2e189a813046\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"dbff2cc7-d4aa-4bdf-812b-2e189a813046\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 13600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"720a7272-615a-4993-8a61-bb47689aa4b4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"720a7272-615a-4993-8a61-bb47689aa4b4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 13700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 13800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"206bc265-1ec1-40bf-9499-21ed5b69d961\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"206bc265-1ec1-40bf-9499-21ed5b69d961\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 13900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 14000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 14100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 14200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 14300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 14400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 14500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 14600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"79fff03f-557e-49f8-8eac-506f5b9395f4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"79fff03f-557e-49f8-8eac-506f5b9395f4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 14700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 14800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 14900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7b39a29c-e165-4514-9a69-d274f502f13d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7b39a29c-e165-4514-9a69-d274f502f13d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 15000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"ba4cb48a-b01f-4aa7-ac5e-be90762784cb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"ba4cb48a-b01f-4aa7-ac5e-be90762784cb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 15100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"f993de5a-560d-41cc-81d4-4b3643c65b97\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"f993de5a-560d-41cc-81d4-4b3643c65b97\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 15200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"82ddf816-8e98-4261-8851-88c91cee5945\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"82ddf816-8e98-4261-8851-88c91cee5945\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 15300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e50e3e02-123c-4da4-a975-f1a1957c1366\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e50e3e02-123c-4da4-a975-f1a1957c1366\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 15400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"ba6a422a-d595-452f-b1a7-4dfd9b2af0d4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"ba6a422a-d595-452f-b1a7-4dfd9b2af0d4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 15500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"70c85570-44d7-421b-853d-11e13d345ea8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"70c85570-44d7-421b-853d-11e13d345ea8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 15600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"35b67dd7-832f-4241-9445-58662abfaffa\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"35b67dd7-832f-4241-9445-58662abfaffa\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 15700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d202e2ce-2912-4ae9-bd5c-3c4b4a84ad4a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d202e2ce-2912-4ae9-bd5c-3c4b4a84ad4a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 15800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"84b7474c-fefd-46e1-abf1-78aa3ca1d486\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"84b7474c-fefd-46e1-abf1-78aa3ca1d486\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 15900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"f95a652f-7a93-4f10-b108-4e50e6c75ef2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"f95a652f-7a93-4f10-b108-4e50e6c75ef2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 16000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 16100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b3a5dcf6-472a-489d-97fb-774d934270a6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b3a5dcf6-472a-489d-97fb-774d934270a6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 16200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"cb19be2f-d4a8-4c8d-96d6-6cdbf4dfa244\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"cb19be2f-d4a8-4c8d-96d6-6cdbf4dfa244\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 16300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"33ae498e-9991-49ef-9084-98caeee1fbae\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"33ae498e-9991-49ef-9084-98caeee1fbae\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 16400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a319a2d5-92b7-4c6f-947e-73e76a04d5b2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a319a2d5-92b7-4c6f-947e-73e76a04d5b2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 16500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a5dff7f2-4dd0-4115-939c-9296a8e650a9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a5dff7f2-4dd0-4115-939c-9296a8e650a9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 16600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6e16bef4-01a0-4b35-9943-a27620128e69\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6e16bef4-01a0-4b35-9943-a27620128e69\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 16700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7f2b57bb-20f1-4f0f-b37e-37a6709cb138\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7f2b57bb-20f1-4f0f-b37e-37a6709cb138\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 16800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 16900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 17000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 17100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 17200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 17300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 17400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 17500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 17600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 17700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a51eaf06-8d47-4b90-a36d-8148e0341b43\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a51eaf06-8d47-4b90-a36d-8148e0341b43\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 17800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 17900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 18000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 18100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"652b26ec-9697-4f81-8e01-e12cc1190a91\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"652b26ec-9697-4f81-8e01-e12cc1190a91\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 18200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7aabc6c4-2b3a-4540-8ffe-78493205207a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7aabc6c4-2b3a-4540-8ffe-78493205207a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 18300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 18400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a27cfe8f-c00d-4077-a56d-e3b7789225df\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a27cfe8f-c00d-4077-a56d-e3b7789225df\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 18500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"5c7b2582-097f-4aca-8323-7dacb9b28f22\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"5c7b2582-097f-4aca-8323-7dacb9b28f22\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 18600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"18609703-f847-4dd6-aa32-71c3b47918db\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"18609703-f847-4dd6-aa32-71c3b47918db\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 18700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 18800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"33ade7f7-70aa-41f0-aa68-2d247975fd2d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"33ade7f7-70aa-41f0-aa68-2d247975fd2d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 18900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"33858274-147c-43b4-881e-acd03d37b2a8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"33858274-147c-43b4-881e-acd03d37b2a8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 19000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c61b5f23-cc19-4627-a19d-98216eab090e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c61b5f23-cc19-4627-a19d-98216eab090e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 19100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"2db01f8a-7ffd-42b0-b418-18ebca80f2a9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"2db01f8a-7ffd-42b0-b418-18ebca80f2a9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 19200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"0b2918ac-695d-40ba-a24d-2ca3c015d001\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"0b2918ac-695d-40ba-a24d-2ca3c015d001\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 19300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 19400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 19500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 19600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"949d8158-484e-49ee-b053-74ac6f8f08c9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"949d8158-484e-49ee-b053-74ac6f8f08c9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 19700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d4264e95-261a-406d-bd76-157d23e82ca3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d4264e95-261a-406d-bd76-157d23e82ca3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 19800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 19900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"60350e78-b32a-4a72-af9d-1c4f1c4cd1b3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"60350e78-b32a-4a72-af9d-1c4f1c4cd1b3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 20000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"348e665a-28c2-4951-90ec-08ab41579035\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"348e665a-28c2-4951-90ec-08ab41579035\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 20100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b4ef5d65-242e-4a70-af9b-c33d92c2317a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b4ef5d65-242e-4a70-af9b-c33d92c2317a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 20200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"4b29611c-7951-4ddf-8baf-9d5487a98b47\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"4b29611c-7951-4ddf-8baf-9d5487a98b47\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 20300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"9ce09b6f-7374-4d1f-9e5c-4446c0177ecc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"9ce09b6f-7374-4d1f-9e5c-4446c0177ecc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 20400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"1fc022d0-dc05-488f-bc4a-7881bfb25d1c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"1fc022d0-dc05-488f-bc4a-7881bfb25d1c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 20500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"de0fe88c-a3b1-440f-933d-0ec746e643eb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"de0fe88c-a3b1-440f-933d-0ec746e643eb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 20600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c298ca01-d531-4b37-b0a8-f3447a578955\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c298ca01-d531-4b37-b0a8-f3447a578955\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 20700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"11938af0-815b-4210-9143-5a422dcc661e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"11938af0-815b-4210-9143-5a422dcc661e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 20800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 20900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 21000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"87b928e3-584f-4fad-9905-89564f25e206\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"87b928e3-584f-4fad-9905-89564f25e206\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 21100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 21200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"ac344bc3-5ca3-4f2b-b017-b9f970f72222\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"ac344bc3-5ca3-4f2b-b017-b9f970f72222\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 21300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 21400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 21500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"55299ac2-65d1-41ae-935f-24c1e59ae99d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"55299ac2-65d1-41ae-935f-24c1e59ae99d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 21600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 21700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 21800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 21900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e5f55a4d-9145-4c8f-8acf-aa31544799ff\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e5f55a4d-9145-4c8f-8acf-aa31544799ff\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 22000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"5f296954-0260-4f48-9535-d875ae2caa1d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"5f296954-0260-4f48-9535-d875ae2caa1d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 22100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"368b1fc5-53cc-48f2-b4ce-c279f152435b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"368b1fc5-53cc-48f2-b4ce-c279f152435b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 22200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 22300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 22400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 22500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 22600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"9e877ef8-7a06-47d4-8657-d1be85d9019a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"9e877ef8-7a06-47d4-8657-d1be85d9019a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 22700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"390e6a18-f185-4aff-b665-f02ef3971e1c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"390e6a18-f185-4aff-b665-f02ef3971e1c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 22800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e15433ff-665f-45f4-b46a-ee0721a44937\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e15433ff-665f-45f4-b46a-ee0721a44937\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 22900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 23000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d96bad21-71f7-4f7c-9656-52e8bd5b1c35\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d96bad21-71f7-4f7c-9656-52e8bd5b1c35\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 23100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 23200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3298596e-74c5-46c3-b24c-cbff214703da\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3298596e-74c5-46c3-b24c-cbff214703da\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 23300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6a6767be-7cce-4a31-be81-14a68ab91531\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6a6767be-7cce-4a31-be81-14a68ab91531\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 23400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"af30ea58-8a67-44ff-be90-ffbf96f65b72\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"af30ea58-8a67-44ff-be90-ffbf96f65b72\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 23500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"581d3795-11e1-49ef-b51f-569b8fdf6a55\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"581d3795-11e1-49ef-b51f-569b8fdf6a55\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 23600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 23700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"87685820-cd14-4723-a71f-e88228dd9c0c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"87685820-cd14-4723-a71f-e88228dd9c0c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 23800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 23900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 24000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"187a8c0c-575a-484e-890f-470af82c27a2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"187a8c0c-575a-484e-890f-470af82c27a2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 24100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"cf9dec04-3a60-45de-aa08-d04eb27a4c30\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"cf9dec04-3a60-45de-aa08-d04eb27a4c30\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 24200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 24300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 24400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"81523dd0-2825-4f52-88e2-758cb22bb467\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"81523dd0-2825-4f52-88e2-758cb22bb467\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 24500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"80205b1c-58d6-4925-9397-8cd1df6bd871\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"80205b1c-58d6-4925-9397-8cd1df6bd871\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 24600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"534fda52-baee-4d84-9842-e958eb1642b5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"534fda52-baee-4d84-9842-e958eb1642b5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 24700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 24800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 24900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8f31013c-2032-4a91-972e-e14d0b2e8902\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8f31013c-2032-4a91-972e-e14d0b2e8902\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 25000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 25100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"68a5ff16-0d99-4393-9d18-d5eb900c5b43\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"68a5ff16-0d99-4393-9d18-d5eb900c5b43\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 25200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"97c021b7-6416-47e0-be0b-d691524b70fc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"97c021b7-6416-47e0-be0b-d691524b70fc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 25300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"5c009631-6973-45d4-bfed-9234aa8bf499\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"5c009631-6973-45d4-bfed-9234aa8bf499\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 25400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"371f6082-0f47-4691-8d61-e244919708f3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"371f6082-0f47-4691-8d61-e244919708f3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 25500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 25600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 25700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"506b8eee-af4d-48d5-ae4a-c07afec72289\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"506b8eee-af4d-48d5-ae4a-c07afec72289\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 25800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"946686af-6294-417b-9ce8-bf1003246f5f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"946686af-6294-417b-9ce8-bf1003246f5f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 25900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"33cf4e15-c7cf-4fc4-9376-a9a4bdd95ff4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"33cf4e15-c7cf-4fc4-9376-a9a4bdd95ff4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 26000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6811a009-1162-4ff2-b5e0-03c11bb0319f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6811a009-1162-4ff2-b5e0-03c11bb0319f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 26100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 26200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 26300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3002fbff-298b-46e2-9ed3-6976456d39c4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3002fbff-298b-46e2-9ed3-6976456d39c4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 26400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d6305ff4-2cf0-4a6c-8d6c-f9bd3d097318\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d6305ff4-2cf0-4a6c-8d6c-f9bd3d097318\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 26500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 26600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e1cce728-d122-47b7-b1ad-13fa725edc15\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e1cce728-d122-47b7-b1ad-13fa725edc15\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 26700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7d4d2f48-85bc-4b37-8ca6-844114483c65\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7d4d2f48-85bc-4b37-8ca6-844114483c65\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 26800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"0c4d6691-d78a-4cd2-90f2-b7bd017cb6d6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"0c4d6691-d78a-4cd2-90f2-b7bd017cb6d6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 26900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"be133eb1-223d-4165-8d87-833e56251fbb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"be133eb1-223d-4165-8d87-833e56251fbb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 27000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"0c2b65bb-8503-461a-beee-3a479a3b5363\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"0c2b65bb-8503-461a-beee-3a479a3b5363\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 27100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 27200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 27300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"90699be8-5367-4c0f-87de-74f4b8fe9b86\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"90699be8-5367-4c0f-87de-74f4b8fe9b86\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 27400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 27500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"0641c902-b2de-4468-a1c0-6f5e997f0997\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"0641c902-b2de-4468-a1c0-6f5e997f0997\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 27600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6e11b6b7-0bda-4ce0-b74e-a153a06d8ae4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6e11b6b7-0bda-4ce0-b74e-a153a06d8ae4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 27700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"f65c4b95-0730-443e-8e79-2515318075c5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"f65c4b95-0730-443e-8e79-2515318075c5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 27800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d4e6a8b3-3cb9-4c12-958f-98307ecdb2a1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d4e6a8b3-3cb9-4c12-958f-98307ecdb2a1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 27900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"48dc6ca8-4b70-4e9d-b978-e4b94c535426\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"48dc6ca8-4b70-4e9d-b978-e4b94c535426\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 28000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 28100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 28200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 28300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"608efb95-5b30-47c8-be3b-16b31ef76013\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"608efb95-5b30-47c8-be3b-16b31ef76013\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 28400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"cd57dd93-1350-4f56-be2b-3a2193ae6ffb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"cd57dd93-1350-4f56-be2b-3a2193ae6ffb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 28500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 28600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 28700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 28800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 28900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 29000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"195b2c2d-1312-449b-8417-ab3eb8610d36\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"195b2c2d-1312-449b-8417-ab3eb8610d36\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 29100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"2b642c81-ab21-4ffa-89c0-591de34d4706\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"2b642c81-ab21-4ffa-89c0-591de34d4706\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 29200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"5a66792b-267e-4250-96e5-3f72d8114d06\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"5a66792b-267e-4250-96e5-3f72d8114d06\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 29300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d8a569c2-f50c-4be4-8ecf-9786b2682ddc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d8a569c2-f50c-4be4-8ecf-9786b2682ddc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 29400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a65d6313-aa1f-4c8b-90b8-d75b85a3dee2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a65d6313-aa1f-4c8b-90b8-d75b85a3dee2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 29500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 29600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"1b8d8ce7-8f0d-48db-bbdd-846c18ec93be\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"1b8d8ce7-8f0d-48db-bbdd-846c18ec93be\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 29700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8455ea00-d7b3-48f2-b45b-0082e1a2f9b1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8455ea00-d7b3-48f2-b45b-0082e1a2f9b1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 29800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 29900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e4c5e2e4-c749-4e15-84ec-1403ec337011\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e4c5e2e4-c749-4e15-84ec-1403ec337011\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 30000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"89ceed70-3506-4f13-a6f4-dcf92bc7af87\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"89ceed70-3506-4f13-a6f4-dcf92bc7af87\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 30100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 30200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 30300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 30400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 30500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"74fedafc-b102-4a34-98a9-4994d35ceb62\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"74fedafc-b102-4a34-98a9-4994d35ceb62\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 30600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"00d8f1d7-9aaa-4a52-a900-58758e1b7c95\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"00d8f1d7-9aaa-4a52-a900-58758e1b7c95\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 30700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 30800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 30900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 31000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"beafd260-5991-45a3-ab4e-b885ff2defe5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"beafd260-5991-45a3-ab4e-b885ff2defe5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 31100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 31200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 31300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 31400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 31500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 31600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 31700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 31800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"9b5c23e1-31c1-4d11-a658-f71bb34205ff\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"9b5c23e1-31c1-4d11-a658-f71bb34205ff\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 31900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 32000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 32100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 32200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 32300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d89a6880-a0c4-4216-bddf-129da0d81cd8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d89a6880-a0c4-4216-bddf-129da0d81cd8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 32400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"901cd77b-a78e-40ac-98c1-8802a8399b03\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"901cd77b-a78e-40ac-98c1-8802a8399b03\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 32500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"67386d29-af93-4d49-b66d-294ba1df4ca2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"67386d29-af93-4d49-b66d-294ba1df4ca2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 32600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 32700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"93fcdc57-fffc-451b-acf7-3b69591f0f1d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"93fcdc57-fffc-451b-acf7-3b69591f0f1d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 32800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 32900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8e5b1845-b24b-4711-b6f8-e00b190291ce\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8e5b1845-b24b-4711-b6f8-e00b190291ce\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 33000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"41b5a792-43b0-4925-a932-0136d37ee68a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"41b5a792-43b0-4925-a932-0136d37ee68a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 33100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b043c7fa-6335-4d31-9672-802519ac27f4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b043c7fa-6335-4d31-9672-802519ac27f4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 33200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"ec12054a-53ff-4669-b117-248f8e5f799c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"ec12054a-53ff-4669-b117-248f8e5f799c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 33300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 33400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 33500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 33600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"465d660b-6a62-4f98-9701-42cd3370ef25\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"465d660b-6a62-4f98-9701-42cd3370ef25\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 33700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 33800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"f1652382-b875-4972-89fc-a815702b94f4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"f1652382-b875-4972-89fc-a815702b94f4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 33900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"0043359e-e1ae-45ca-9608-6e8e393fb54d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"0043359e-e1ae-45ca-9608-6e8e393fb54d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 34000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6c11bb33-3e19-4cc6-ad2f-00f0bd4822e0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6c11bb33-3e19-4cc6-ad2f-00f0bd4822e0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 34100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 34200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 34300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 34400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 34500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d6269220-826c-41e7-8aea-f7597ba3da14\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d6269220-826c-41e7-8aea-f7597ba3da14\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 34600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"caf36ec7-9396-495d-ace9-3b6e46093354\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"caf36ec7-9396-495d-ace9-3b6e46093354\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 34700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 34800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 34900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 35000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 35100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"1a1a9a03-596b-4b24-85d0-b7422b365c02\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"1a1a9a03-596b-4b24-85d0-b7422b365c02\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 35200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"f70d8500-a313-4e94-908c-69c4f7bd4d8f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"f70d8500-a313-4e94-908c-69c4f7bd4d8f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 35300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"386c3b85-aaf1-4a7a-9744-06d552e82e14\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"386c3b85-aaf1-4a7a-9744-06d552e82e14\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 35400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"2966dc9d-6b94-44f3-b493-f2f5ffcf9be7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"2966dc9d-6b94-44f3-b493-f2f5ffcf9be7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 35500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8682dfe6-6f07-49ee-b4fa-61a1cc1322fb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8682dfe6-6f07-49ee-b4fa-61a1cc1322fb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 35600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"66f01d86-9e23-497c-8cf5-29c4b9a33a48\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"66f01d86-9e23-497c-8cf5-29c4b9a33a48\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 35700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 35800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 35900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 36000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"bdfe211c-29eb-4750-a916-200e12ef1382\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"bdfe211c-29eb-4750-a916-200e12ef1382\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 36100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3789861d-3fd5-4200-af3d-bc65b71ba781\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3789861d-3fd5-4200-af3d-bc65b71ba781\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 36200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"4bf3751b-47f8-4512-b63f-7b22b3a7996d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"4bf3751b-47f8-4512-b63f-7b22b3a7996d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 36300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d59a3c63-f7f6-4290-ae50-38b59628b4b1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d59a3c63-f7f6-4290-ae50-38b59628b4b1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 36400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"1a4b2323-4b5e-449c-a02c-6ce26452b462\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"1a4b2323-4b5e-449c-a02c-6ce26452b462\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 36500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 36600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 36700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 36800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 36900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 37000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 37100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 37200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"302d3a95-c30f-45aa-807d-9393ee2f7d0b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"302d3a95-c30f-45aa-807d-9393ee2f7d0b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 37300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"35e804d9-3593-4fc2-9ad1-ab849f7479a2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"35e804d9-3593-4fc2-9ad1-ab849f7479a2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 37400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3c9ee7b5-6cd4-4496-b674-d7de85c69ffa\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3c9ee7b5-6cd4-4496-b674-d7de85c69ffa\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 37500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 37600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 37700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"dea7876b-6542-4762-b28d-6065a55e43ba\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"dea7876b-6542-4762-b28d-6065a55e43ba\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 37800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"03991a34-7e00-4e2a-a8f4-6b12699ddecd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"03991a34-7e00-4e2a-a8f4-6b12699ddecd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 37900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 38000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 38100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 38200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 38300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 38400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"29d75d13-b6e2-4523-854c-d44a734d0851\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"29d75d13-b6e2-4523-854c-d44a734d0851\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 38500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 38600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"08a120cf-2c0e-4d19-bd10-3c98a4295487\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"08a120cf-2c0e-4d19-bd10-3c98a4295487\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 38700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 38800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"59552698-8e48-4679-91be-db326dd8f0cd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"59552698-8e48-4679-91be-db326dd8f0cd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 38900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 39000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 39100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"693fda25-4940-4b78-8161-254df56247c0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"693fda25-4940-4b78-8161-254df56247c0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 39200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d2f1932d-4442-46f6-ab7e-d685b0a7b104\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d2f1932d-4442-46f6-ab7e-d685b0a7b104\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 39300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 39400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 39500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"12482404-3f64-4815-8133-2f4100f89ed8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"12482404-3f64-4815-8133-2f4100f89ed8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 39600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 39700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 39800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 39900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3e37df70-57ff-40d0-b2b6-15bc17e0a0e1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3e37df70-57ff-40d0-b2b6-15bc17e0a0e1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 40000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 40100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 40200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 40300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7ddeabe2-db58-45ec-b9b0-6947905076ea\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7ddeabe2-db58-45ec-b9b0-6947905076ea\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 40400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 40500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"27426f92-1c76-4619-b79d-131549bed4ec\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"27426f92-1c76-4619-b79d-131549bed4ec\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 40600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 40700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 40800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"195091b9-f68f-4cab-bb05-06307eac10ff\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"195091b9-f68f-4cab-bb05-06307eac10ff\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 40900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 41000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"da5cea4b-bd4b-4850-81d7-44077b0bd41b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"da5cea4b-bd4b-4850-81d7-44077b0bd41b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 41100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 41200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 41300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 41400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"44bfe139-824f-47ff-bff0-ab3f1ef88e7b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"44bfe139-824f-47ff-bff0-ab3f1ef88e7b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 41500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"198120e5-ba3f-4710-81fb-e19de930186c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"198120e5-ba3f-4710-81fb-e19de930186c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 41600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"de417c35-969e-425d-af8b-940fab95ec95\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"de417c35-969e-425d-af8b-940fab95ec95\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 41700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8ca579ae-9985-42ab-ba95-32518565866b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8ca579ae-9985-42ab-ba95-32518565866b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(trade[self.PD_PRICE_INDEX] for trade in past_market_data)\\n\"]}",
  "timestamp": 41800
}



Activities log:
day;timestamp;product;bid_price_1;bid_volume_1;bid_price_2;bid_volume_2;bid_price_3;bid_volume_3;ask_price_1;ask_volume_1;ask_price_2;ask_volume_2;ask_price_3;ask_volume_3;mid_price;profit_and_loss
-2;0;AMETHYSTS;10002;1;9996;2;9995;29;10004;2;10005;29;;;10003.0;0.0
-2;0;STARFRUIT;5002;1;4997;31;;;5003;31;;;;;5002.5;0.0
-2;100;AMETHYSTS;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;0.0
-2;100;STARFRUIT;4997;24;;;;;5003;2;5004;22;;;5000.0;0.0
-2;200;STARFRUIT;4997;2;4996;20;;;5003;20;;;;;5000.0;0.0
-2;200;AMETHYSTS;9995;20;;;;;10005;20;;;;;10000.0;0.0
-2;300;AMETHYSTS;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;0.0
-2;300;STARFRUIT;4996;31;;;;;5003;31;;;;;4999.5;0.0
-2;400;AMETHYSTS;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;0.0
-2;400;STARFRUIT;4995;27;;;;;5002;27;;;;;4998.5;0.0
-2;500;AMETHYSTS;9995;30;;;;;10002;4;10005;30;;;9998.5;0.0
-2;500;STARFRUIT;4996;30;;;;;5003;30;;;;;4999.5;0.0
-2;600;STARFRUIT;4999;5;4997;6;4996;25;5003;25;;;;;5001.0;0.0
-2;600;AMETHYSTS;10000;5;9995;25;;;10005;25;;;;;10002.5;0.0
-2;700;AMETHYSTS;9995;23;;;;;10005;23;;;;;10000.0;0.0
-2;700;STARFRUIT;4997;2;4996;23;;;5003;23;;;;;5000.0;0.0
-2;800;AMETHYSTS;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;0.0
-2;800;STARFRUIT;4997;30;;;;;5003;1;5004;29;;;5000.0;0.0
-2;900;AMETHYSTS;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;0.0
-2;900;STARFRUIT;4997;23;;;;;5003;1;5004;22;;;5000.0;0.0
-2;1000;STARFRUIT;4996;26;;;;;5001;6;5003;26;;;4998.5;0.0
-2;1000;AMETHYSTS;9995;26;;;;;10005;26;;;;;10000.0;0.0
-2;1100;STARFRUIT;4998;6;4997;26;;;5004;26;;;;;5001.0;0.0
-2;1100;AMETHYSTS;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;0.0
-2;1200;AMETHYSTS;9995;21;;;;;9998;1;10005;21;;;9996.5;0.0
-2;1200;STARFRUIT;4997;21;;;;;5002;8;5004;21;;;4999.5;0.0
-2;1300;STARFRUIT;4997;31;;;;;5003;1;5004;30;;;5000.0;0.0
-2;1300;AMETHYSTS;10002;1;9996;1;9995;30;10004;1;10005;30;;;10003.0;0.0
-2;1400;STARFRUIT;4997;3;4996;25;;;5003;26;;;;;5000.0;0.0
-2;1400;AMETHYSTS;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;0.0
-2;1500;STARFRUIT;4996;27;;;;;5003;27;;;;;4999.5;0.0
-2;1500;AMETHYSTS;9995;27;;;;;10005;27;;;;;10000.0;0.0
-2;1600;AMETHYSTS;9995;29;;;;;10005;29;;;;;10000.0;0.0
-2;1600;STARFRUIT;4996;29;;;;;5001;4;5003;29;;;4998.5;0.0
-2;1700;STARFRUIT;4997;22;;;;;5002;8;5003;2;5004;20;4999.5;0.0
-2;1700;AMETHYSTS;9996;2;9995;20;;;10002;1;10004;2;10005;20;9999.0;0.0
-2;1800;STARFRUIT;4997;1;4996;22;;;5003;23;;;;;5000.0;0.0
-2;1800;AMETHYSTS;10002;1;9996;1;9995;22;10004;1;10005;22;;;10003.0;0.0
-2;1900;STARFRUIT;4997;1;4996;28;;;5001;5;5003;29;;;4999.0;0.0
-2;1900;AMETHYSTS;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;0.0
-2;2000;AMETHYSTS;9996;2;9995;24;;;9998;1;10004;2;10005;24;9997.0;0.0
-2;2000;STARFRUIT;4996;26;;;;;5003;26;;;;;4999.5;0.0
-2;2100;STARFRUIT;4997;2;4996;25;;;5003;27;;;;;5000.0;0.0
-2;2100;AMETHYSTS;9996;2;9995;25;;;10002;3;10004;2;10005;25;9999.0;0.0
-2;2200;STARFRUIT;4997;1;4996;24;;;5001;7;5003;25;;;4999.0;0.0
-2;2200;AMETHYSTS;9998;8;9996;1;9995;24;10004;1;10005;24;;;10001.0;0.0
-2;2300;STARFRUIT;4997;32;;;;;5003;2;5004;30;;;5000.0;0.0
-2;2300;AMETHYSTS;9998;7;9996;2;9995;30;10004;2;10005;30;;;10001.0;0.0
-2;2400;AMETHYSTS;9995;29;;;;;10005;29;;;;;10000.0;0.0
-2;2400;STARFRUIT;4997;28;;;;;5004;29;;;;;5000.5;0.0
-2;2500;STARFRUIT;4997;3;4996;22;;;5003;23;;;;;5000.0;0.0
-2;2500;AMETHYSTS;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;0.0
-2;2600;STARFRUIT;4998;3;4997;23;;;5004;23;;;;;5001.0;0.0
-2;2600;AMETHYSTS;9995;23;;;;;10005;23;;;;;10000.0;0.0
-2;2700;STARFRUIT;4998;26;;;;;5005;26;;;;;5001.5;0.0
-2;2700;AMETHYSTS;9998;6;9995;26;;;10005;26;;;;;10001.5;0.0
-2;2800;AMETHYSTS;9995;25;;;;;10005;25;;;;;10000.0;0.0
-2;2800;STARFRUIT;4997;25;;;;;5004;25;;;;;5000.5;0.0
-2;2900;STARFRUIT;4996;26;;;;;5003;26;;;;;4999.5;0.0
-2;2900;AMETHYSTS;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;0.0
-2;3100;STARFRUIT;4997;3;4996;52;;;5001;5;5003;52;;;4999.0;0.0
-2;3100;AMETHYSTS;9998;1;9996;2;9995;50;10004;2;10005;50;;;10001.0;0.0
-2;3300;STARFRUIT;4997;2;4996;53;;;5001;5;5003;55;;;4999.0;0.0
-2;3300;AMETHYSTS;9996;3;9995;52;;;10004;3;10005;52;;;10000.0;0.0
-2;3500;STARFRUIT;4997;52;;;;;5003;2;5004;50;;;5000.0;0.0
-2;3500;AMETHYSTS;9996;2;9995;50;;;10004;2;10005;50;;;10000.0;0.0
-2;3700;STARFRUIT;4998;3;4997;45;;;5004;45;;;;;5001.0;0.0
-2;3700;AMETHYSTS;9996;1;9995;44;;;9998;3;10004;1;10005;44;9997.0;0.0
-2;3900;STARFRUIT;4998;2;4997;51;;;5003;1;5004;50;;;5000.5;0.0
-2;3900;AMETHYSTS;9998;1;9996;3;9995;48;10002;10;10004;3;10005;48;10000.0;0.0
-2;4000;AMETHYSTS;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;0.0
-2;4000;STARFRUIT;4997;32;;;;;5003;2;5004;30;;;5000.0;0.0
-2;4100;STARFRUIT;4997;29;;;;;5003;2;5004;27;;;5000.0;0.0
-2;4100;AMETHYSTS;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;0.0
-2;4200;STARFRUIT;4998;2;4997;24;;;5004;26;;;;;5001.0;0.0
-2;4200;AMETHYSTS;9996;2;9995;24;;;10002;4;10004;2;10005;24;9999.0;0.0
-2;5000;STARFRUIT;4997;169;4996;50;;;4998;1;5000;5;5002;3;4997.5;0.0
-2;5000;AMETHYSTS;9998;8;9996;8;9995;211;10000;6;10002;27;10004;8;9999.0;0.0
-2;5200;AMETHYSTS;9998;9;9996;2;9995;56;10004;2;10005;56;;;10001.0;0.0
-2;5200;STARFRUIT;4998;15;4997;57;;;5003;1;5004;57;;;5000.5;0.0
-2;5300;STARFRUIT;5002;1;4997;21;;;5004;21;;;;;5003.0;0.0
-2;5300;AMETHYSTS;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;0.0
-2;5500;AMETHYSTS;9995;48;;;;;10005;48;;;;;10000.0;0.0
-2;5500;STARFRUIT;4997;48;;;;;5002;6;5004;48;;;4999.5;0.0
-2;5600;STARFRUIT;5002;2;4998;28;;;5005;28;;;;;5003.5;0.0
-2;5600;AMETHYSTS;9995;28;;;;;10005;28;;;;;10000.0;0.0
-2;5900;AMETHYSTS;9998;2;9996;3;9995;85;10004;3;10005;85;;;10001.0;0.0
-2;5900;STARFRUIT;5000;5;4999;87;;;5005;2;5006;86;;;5002.5;0.0
-2;6300;AMETHYSTS;9996;4;9995;98;;;10004;4;10005;98;;;10000.0;0.0
-2;6300;STARFRUIT;4999;53;4998;53;;;5005;57;5006;45;;;5002.0;0.0
-2;6400;STARFRUIT;4999;1;4998;24;;;5005;25;;;;;5002.0;0.0
-2;6400;AMETHYSTS;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;0.0
-2;6500;STARFRUIT;4999;27;;;;;5005;1;5006;26;;;5002.0;0.0
-2;6500;AMETHYSTS;9996;1;9995;26;;;9998;1;10004;1;10005;26;9997.0;0.0
-2;7200;STARFRUIT;4999;7;4998;104;4997;86;5002;5;5003;2;5004;84;5000.5;0.0
-2;7200;AMETHYSTS;9998;7;9996;7;9995;183;10002;8;10004;7;10005;183;10000.0;0.0
-2;7300;STARFRUIT;4998;6;4997;29;;;5004;31;;;;;5001.0;0.0
-2;7300;AMETHYSTS;10002;1;9996;2;9995;29;10004;2;10005;29;;;10003.0;0.0
-2;7600;STARFRUIT;4998;47;4997;22;;;5004;23;5005;47;;;5001.0;0.0
-2;7600;AMETHYSTS;9996;3;9995;67;;;10002;10;10004;3;10005;67;9999.0;0.0
-2;7900;AMETHYSTS;9998;3;9996;2;9995;70;10004;2;10005;70;;;10001.0;0.0
-2;7900;STARFRUIT;4999;4;4998;28;4997;43;5004;46;5005;26;;;5001.5;0.0
-2;8000;STARFRUIT;4998;27;;;;;5003;8;5005;27;;;5000.5;0.0
-2;8000;AMETHYSTS;9995;27;;;;;10005;27;;;;;10000.0;0.0
-2;8100;AMETHYSTS;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;0.0
-2;8100;STARFRUIT;4998;23;;;;;5004;1;5005;22;;;5001.0;0.0
-2;8200;AMETHYSTS;9995;23;;;;;10005;23;;;;;10000.0;0.0
-2;8200;STARFRUIT;4997;23;;;;;5002;1;5004;23;;;4999.5;0.0
-2;8300;AMETHYSTS;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;0.0
-2;8300;STARFRUIT;4998;30;;;;;5005;30;;;;;5001.5;0.0
-2;8400;STARFRUIT;4998;28;;;;;5005;28;;;;;5001.5;0.0
-2;8400;AMETHYSTS;9995;28;;;;;10005;28;;;;;10000.0;0.0
-2;8500;AMETHYSTS;9998;10;9996;2;9995;29;10004;2;10005;29;;;10001.0;0.0
-2;8500;STARFRUIT;4998;2;4997;29;;;5004;31;;;;;5001.0;0.0
-2;9000;AMETHYSTS;9998;18;9996;3;9995;129;10004;3;10005;129;;;10001.0;0.0
-2;9000;STARFRUIT;4999;1;4998;33;4997;105;5002;4;5004;106;5005;26;5000.5;0.0
-2;9100;AMETHYSTS;9998;3;9996;2;9995;27;10004;2;10005;27;;;10001.0;0.0
-2;9100;STARFRUIT;4998;29;;;;;5005;29;;;;;5001.5;0.0
-2;9400;AMETHYSTS;9998;12;9996;3;9995;68;10004;3;10005;68;;;10001.0;0.0
-2;9400;STARFRUIT;4998;21;4997;50;;;5002;7;5004;51;5005;20;5000.0;0.0
-2;9500;AMETHYSTS;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;0.0
-2;9500;STARFRUIT;4998;4;4997;31;;;5004;31;;;;;5001.0;0.0
-2;9600;STARFRUIT;4997;31;;;;;5004;31;;;;;5000.5;0.0
-2;9600;AMETHYSTS;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;0.0
-2;9700;AMETHYSTS;9995;22;;;;;10002;1;10005;22;;;9998.5;0.0
-2;9700;STARFRUIT;4997;22;;;;;5004;22;;;;;5000.5;0.0
-2;9800;AMETHYSTS;9995;26;;;;;10005;26;;;;;10000.0;0.0
-2;9800;STARFRUIT;4997;26;;;;;5004;26;;;;;5000.5;0.0
-2;9900;AMETHYSTS;9995;25;;;;;10005;25;;;;;10000.0;0.0
-2;9900;STARFRUIT;5001;4;4996;25;;;5003;25;;;;;5002.0;0.0
-2;10100;STARFRUIT;4997;8;4996;29;4995;24;5002;25;5003;28;;;4999.5;0.0
-2;10100;AMETHYSTS;9996;1;9995;52;;;10002;3;10004;1;10005;52;9999.0;0.0
-2;10200;AMETHYSTS;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;0.0
-2;10200;STARFRUIT;4996;2;4995;26;;;5002;28;;;;;4999.0;0.0
-2;10500;STARFRUIT;5001;1;4997;9;4996;87;5003;87;;;;;5002.0;0.0
-2;10500;AMETHYSTS;10002;1;9998;8;9996;3;10004;3;10005;84;;;10003.0;0.0
-2;10700;STARFRUIT;4998;1;4997;59;;;5000;4;5002;4;5004;59;4999.0;0.0
-2;10700;AMETHYSTS;9998;8;9996;2;9995;57;10000;4;10004;2;10005;57;9999.0;0.0
-2;10800;STARFRUIT;4998;3;4997;24;;;5004;24;;;;;5001.0;0.0
-2;10800;AMETHYSTS;9998;5;9996;2;9995;22;10004;2;10005;22;;;10001.0;0.0
-2;10900;STARFRUIT;4999;7;4998;28;;;5005;28;;;;;5002.0;0.0
-2;10900;AMETHYSTS;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;0.0
-2;11100;STARFRUIT;5002;7;4998;21;4997;24;5004;24;5005;21;;;5003.0;0.0
-2;11100;AMETHYSTS;9998;3;9995;45;;;10002;7;10005;45;;;10000.0;0.0
-2;11200;STARFRUIT;4998;2;4997;21;;;5004;23;;;;;5001.0;0.0
-2;11200;AMETHYSTS;9996;2;9995;21;;;10002;7;10004;2;10005;21;9999.0;0.0
-2;12200;AMETHYSTS;9998;10;9996;13;9995;251;10000;4;10002;9;10004;13;9999.0;0.0
-2;12200;STARFRUIT;4999;1;4998;82;4997;186;5000;5;5002;8;5003;6;4999.5;0.0
-2;12400;STARFRUIT;4999;4;4998;27;4997;28;5004;29;5005;26;;;5001.5;0.0
-2;12400;AMETHYSTS;9998;6;9996;1;9995;54;10004;1;10005;54;;;10001.0;0.0
-2;12700;STARFRUIT;4998;43;4997;20;;;5004;22;5005;42;;;5001.0;0.0
-2;12700;AMETHYSTS;9996;2;9995;62;;;10004;2;10005;62;;;10000.0;0.0
-2;12800;STARFRUIT;4997;22;;;;;5004;22;;;;;5000.5;0.0
-2;12800;AMETHYSTS;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;0.0
-2;12900;STARFRUIT;4998;7;4997;29;;;5003;1;5004;28;;;5000.5;0.0
-2;12900;AMETHYSTS;9996;1;9995;28;;;10002;3;10004;1;10005;28;9999.0;0.0
-2;13000;AMETHYSTS;10002;1;9995;20;;;10005;20;;;;;10003.5;0.0
-2;13000;STARFRUIT;5002;1;4997;6;4996;20;5003;20;;;;;5002.5;0.0
-2;13400;AMETHYSTS;9998;2;9996;3;9995;101;10004;3;10005;101;;;10001.0;0.0
-2;13400;STARFRUIT;4998;6;4997;86;4996;25;5002;5;5003;26;5004;78;5000.0;0.0
-2;13500;STARFRUIT;4997;30;;;;;5002;8;5004;30;;;4999.5;0.0
-2;13500;AMETHYSTS;9995;30;;;;;10005;30;;;;;10000.0;0.0
-2;13800;AMETHYSTS;9996;3;9995;65;;;9998;4;10002;10;10004;3;9997.0;0.0
-2;13800;STARFRUIT;4999;5;4998;43;4997;24;5002;3;5004;28;5005;40;5000.5;0.0
-2;14000;STARFRUIT;4998;27;4997;27;;;5001;6;5003;4;5004;29;4999.5;0.0
-2;14000;AMETHYSTS;9998;5;9996;4;9995;47;10000;6;10004;4;10005;47;9999.0;0.0
-2;14100;STARFRUIT;4997;25;;;;;5002;1;5004;25;;;4999.5;0.0
-2;14100;AMETHYSTS;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;0.0
-2;14200;AMETHYSTS;9995;21;;;;;10005;21;;;;;10000.0;0.0
-2;14200;STARFRUIT;4997;21;;;;;4998;1;5004;21;;;4997.5;0.0
-2;14300;STARFRUIT;4997;29;;;;;5004;29;;;;;5000.5;0.0
-2;14300;AMETHYSTS;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;0.0
-2;14400;STARFRUIT;4997;30;;;;;5004;30;;;;;5000.5;0.0
-2;14400;AMETHYSTS;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;0.0
-2;14500;AMETHYSTS;9995;24;;;;;10002;1;10005;24;;;9998.5;0.0
-2;14500;STARFRUIT;4997;24;;;;;5004;24;;;;;5000.5;0.0
-2;14600;STARFRUIT;4997;28;;;;;5000;2;5004;28;;;4998.5;0.0
-2;14600;AMETHYSTS;9996;2;9995;26;;;10000;2;10004;2;10005;26;9998.0;0.0
-2;14800;STARFRUIT;4997;58;;;;;5004;58;;;;;5000.5;0.0
-2;14800;AMETHYSTS;9995;58;;;;;10002;13;10005;58;;;9998.5;0.0
-2;14900;AMETHYSTS;10000;4;9995;26;;;10005;26;;;;;10002.5;0.0
-2;14900;STARFRUIT;5000;4;4997;26;;;5004;26;;;;;5002.0;0.0
-2;16100;AMETHYSTS;9998;16;9996;13;9995;302;10000;3;10002;16;10004;13;9999.0;0.0
-2;16100;STARFRUIT;4998;35;4997;271;4996;24;5000;8;5002;10;5003;29;4999.0;0.0
-2;16900;AMETHYSTS;9998;4;9996;8;9995;202;10002;10;10004;8;10005;202;10000.0;0.0
-2;16900;STARFRUIT;4997;1;4996;154;4995;56;5002;62;5003;148;;;4999.5;0.0
-2;17000;STARFRUIT;4996;29;;;;;5003;29;;;;;4999.5;0.0
-2;17000;AMETHYSTS;9998;9;9995;29;;;10005;29;;;;;10001.5;0.0
-2;17100;AMETHYSTS;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;0.0
-2;17100;STARFRUIT;4996;23;;;;;5002;2;5003;21;;;4999.0;0.0
-2;17200;AMETHYSTS;9998;3;9996;2;9995;22;10004;2;10005;22;;;10001.0;0.0
-2;17200;STARFRUIT;4996;24;;;;;5003;24;;;;;4999.5;0.0
-2;17300;AMETHYSTS;9996;2;9995;23;;;10002;9;10004;2;10005;23;9999.0;0.0
-2;17300;STARFRUIT;4996;25;;;;;5001;6;5003;25;;;4998.5;0.0
-2;17400;STARFRUIT;4999;6;4996;28;;;5003;28;;;;;5001.0;0.0
-2;17400;AMETHYSTS;10000;6;9998;7;9995;28;10005;28;;;;;10002.5;0.0
-2;17500;AMETHYSTS;9995;26;;;;;10005;26;;;;;10000.0;0.0
-2;17500;STARFRUIT;4996;26;;;;;5003;26;;;;;4999.5;0.0
-2;17600;AMETHYSTS;9998;6;9995;30;;;10005;30;;;;;10001.5;0.0
-2;17600;STARFRUIT;4996;30;;;;;5003;30;;;;;4999.5;0.0
-2;17700;AMETHYSTS;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;0.0
-2;17700;STARFRUIT;5001;1;4996;2;4995;27;5002;29;;;;;5001.5;0.0
-2;17900;AMETHYSTS;9996;2;9995;47;;;10002;5;10004;2;10005;47;9999.0;0.0
-2;17900;STARFRUIT;4996;26;4995;23;;;5002;25;5003;24;;;4999.0;0.0
-2;18000;AMETHYSTS;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;0.0
-2;18000;STARFRUIT;4996;2;4995;25;;;5002;27;;;;;4999.0;0.0
-2;18100;AMETHYSTS;9995;20;;;;;10005;20;;;;;10000.0;0.0
-2;18100;STARFRUIT;4996;20;;;;;5003;20;;;;;4999.5;0.0
-2;18400;AMETHYSTS;9996;5;9995;71;;;10004;5;10005;71;;;10000.0;0.0
-2;18400;STARFRUIT;4995;75;;;;;4997;4;5000;5;5002;76;4996.0;0.0
-2;18800;AMETHYSTS;9996;2;9995;97;;;10000;1;10004;2;10005;97;9998.0;0.0
-2;18800;STARFRUIT;4996;70;4995;29;;;4998;1;5001;5;5002;31;4997.0;0.0
-2;19400;STARFRUIT;4996;58;4995;80;;;5002;85;5003;63;;;4999.0;0.0
-2;19400;AMETHYSTS;9998;1;9996;7;9995;141;10004;7;10005;141;;;10001.0;0.0
-2;19500;STARFRUIT;4995;23;;;;;5002;23;;;;;4998.5;0.0
-2;19500;AMETHYSTS;9995;23;;;;;10005;23;;;;;10000.0;0.0
-2;19600;AMETHYSTS;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;0.0
-2;19600;STARFRUIT;4997;2;4996;27;;;5003;29;;;;;5000.0;0.0
-2;19900;STARFRUIT;4997;3;4996;91;;;5001;7;5003;95;;;4999.0;0.0
-2;19900;AMETHYSTS;10002;1;9996;6;9995;89;10004;6;10005;89;;;10003.0;0.0
-2;20900;STARFRUIT;5000;1;4999;6;4997;9;5001;4;5002;48;5003;224;5000.5;0.0
-2;20900;AMETHYSTS;10000;5;9998;4;9996;8;10002;3;10004;8;10005;264;10001.0;0.0
-2;21000;STARFRUIT;4996;2;4995;26;;;5002;28;;;;;4999.0;0.0
-2;21000;AMETHYSTS;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;0.0
-2;21200;AMETHYSTS;9996;2;9995;44;;;9998;1;10004;2;10005;44;9997.0;0.0
-2;21200;STARFRUIT;4996;2;4995;44;;;5002;46;;;;;4999.0;0.0
-2;21400;STARFRUIT;4996;29;4995;29;;;5002;30;5003;28;;;4999.0;0.0
-2;21400;AMETHYSTS;9996;1;9995;57;;;10002;7;10004;1;10005;57;9999.0;0.0
-2;21500;STARFRUIT;5000;4;4996;21;;;5002;1;5003;20;;;5001.0;0.0
-2;21500;AMETHYSTS;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;0.0
-2;21700;STARFRUIT;4996;29;4995;29;;;5002;31;5003;27;;;4999.0;0.0
-2;21700;AMETHYSTS;10002;12;9998;8;9996;4;10004;4;10005;54;;;10003.0;0.0
-2;21800;STARFRUIT;4996;24;;;;;5003;24;;;;;4999.5;0.0
-2;21800;AMETHYSTS;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;0.0
-2;21900;STARFRUIT;4997;1;4996;21;;;5003;22;;;;;5000.0;0.0
-2;21900;AMETHYSTS;10002;3;9996;1;9995;21;10004;1;10005;21;;;10003.0;0.0
-2;22300;STARFRUIT;4997;73;4996;21;;;5003;21;5004;74;;;5000.0;0.0
-2;22300;AMETHYSTS;9998;6;9996;4;9995;91;10002;7;10004;4;10005;91;10000.0;0.0
-2;22400;AMETHYSTS;9996;2;9995;27;;;9998;1;10004;2;10005;27;9997.0;0.0
-2;22400;STARFRUIT;4996;29;;;;;5003;29;;;;;4999.5;0.0
-2;22500;STARFRUIT;4997;2;4996;29;;;5003;31;;;;;5000.0;0.0
-2;22500;AMETHYSTS;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;0.0
-2;22600;STARFRUIT;5000;6;4998;4;4997;22;5003;2;5004;20;;;5001.5;0.0
-2;22600;AMETHYSTS;10000;6;9998;6;9996;2;10004;2;10005;20;;;10002.0;0.0
-2;23000;STARFRUIT;4996;106;;;;;5002;1;5003;107;;;4999.0;0.0
-2;23000;AMETHYSTS;9996;6;9995;102;;;9998;2;10002;8;10004;6;9997.0;0.0
-2;23200;AMETHYSTS;9998;13;9996;2;9995;52;10004;2;10005;52;;;10001.0;0.0
-2;23200;STARFRUIT;4997;31;4996;23;;;5002;3;5003;23;5004;31;4999.5;0.0
-2;23700;STARFRUIT;4998;116;4997;23;;;5002;7;5003;4;5004;24;5000.0;0.0
-2;23700;AMETHYSTS;10002;1;9998;8;9996;6;10004;6;10005;134;;;10003.0;0.0
-2;23900;AMETHYSTS;9995;60;;;;;10005;60;;;;;10000.0;0.0
-2;23900;STARFRUIT;5003;1;5002;1;4998;1;5004;60;;;;;5003.5;0.0
-2;24000;STARFRUIT;4996;29;;;;;5003;29;;;;;4999.5;0.0
-2;24000;AMETHYSTS;9998;9;9995;29;;;10005;29;;;;;10001.5;0.0
-2;24300;AMETHYSTS;9996;5;9995;77;;;10002;7;10004;5;10005;77;9999.0;0.0
-2;24300;STARFRUIT;4996;82;;;;;5001;3;5003;82;;;4998.5;0.0
-2;24400;STARFRUIT;5002;1;4996;22;;;5003;22;;;;;5002.5;0.0
-2;24400;AMETHYSTS;10002;1;9998;4;9996;1;10004;1;10005;21;;;10003.0;0.0
-2;24800;STARFRUIT;4997;1;4996;74;4995;23;5001;2;5002;23;5003;75;4999.0;0.0
-2;24800;AMETHYSTS;9996;1;9995;97;;;9998;1;10004;1;10005;97;9997.0;0.0
-2;24900;STARFRUIT;4999;4;4995;23;;;5002;23;;;;;5000.5;0.0
-2;24900;AMETHYSTS;10002;1;9996;1;9995;22;10004;1;10005;22;;;10003.0;0.0
-2;25100;AMETHYSTS;10002;1;9995;48;;;10005;48;;;;;10003.5;0.0
-2;25100;STARFRUIT;4995;48;;;;;5000;4;5002;48;;;4997.5;0.0
-2;25600;STARFRUIT;5000;5;4996;3;4995;87;5001;45;5002;78;;;5000.5;0.0
-2;25600;AMETHYSTS;9996;6;9995;117;;;9998;11;10002;16;10004;6;9997.0;0.0
-2;25700;AMETHYSTS;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;0.0
-2;25700;STARFRUIT;4995;32;;;;;5000;6;5001;2;5002;30;4997.5;0.0
-2;26200;AMETHYSTS;10002;4;9998;7;9996;5;10004;5;10005;116;;;10003.0;0.0
-2;26200;STARFRUIT;4995;43;4994;70;;;5000;1;5001;73;5002;47;4997.5;0.0
-2;26300;AMETHYSTS;9996;1;9995;29;;;9998;1;10004;1;10005;29;9997.0;0.0
-2;26300;STARFRUIT;4994;30;;;;;5001;30;;;;;4997.5;0.0
-2;26600;AMETHYSTS;9996;3;9995;73;;;9998;1;10004;3;10005;73;9997.0;0.0
-2;26600;STARFRUIT;4994;11;4993;76;;;5000;76;;;;;4997.0;0.0
-2;27200;STARFRUIT;4993;23;4992;35;4991;103;4996;2;4998;108;4999;31;4994.5;0.0
-2;27200;AMETHYSTS;9998;4;9996;3;9995;154;10004;3;10005;154;;;10001.0;0.0
-2;27300;AMETHYSTS;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;0.0
-2;27300;STARFRUIT;4996;1;4991;31;;;4997;2;4998;29;;;4996.5;0.0
-2;27500;AMETHYSTS;9996;1;9995;43;;;10004;1;10005;43;;;10000.0;0.0
-2;27500;STARFRUIT;4992;23;4991;21;;;4997;6;4998;22;4999;22;4994.5;0.0
-2;28100;STARFRUIT;4993;1;4992;159;;;4997;2;4998;2;4999;157;4995.0;0.0
-2;28100;AMETHYSTS;9998;16;9996;6;9995;153;10002;4;10004;6;10005;153;10000.0;0.0
-2;28200;AMETHYSTS;9996;1;9995;25;;;9998;2;10004;1;10005;25;9997.0;0.0
-2;28200;STARFRUIT;4992;26;;;;;4997;5;4999;26;;;4994.5;0.0
-2;28300;STARFRUIT;4993;1;4992;23;;;4994;2;4999;24;;;4993.5;0.0
-2;28300;AMETHYSTS;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;0.0
-2;28600;AMETHYSTS;10002;1;9998;10;9996;4;10004;4;10005;67;;;10003.0;0.0
-2;28600;STARFRUIT;4992;1;4991;69;;;4996;8;4998;71;;;4994.0;0.0
-2;28700;STARFRUIT;4990;30;;;;;4997;30;;;;;4993.5;0.0
-2;28700;AMETHYSTS;9995;30;;;;;10005;30;;;;;10000.0;0.0
-2;28800;STARFRUIT;4990;27;;;;;4997;27;;;;;4993.5;0.0
-2;28800;AMETHYSTS;9995;27;;;;;10005;27;;;;;10000.0;0.0
-2;28900;STARFRUIT;4990;5;4989;21;;;4996;22;;;;;4993.0;0.0
-2;28900;AMETHYSTS;9998;7;9996;1;9995;21;10004;1;10005;21;;;10001.0;0.0
-2;29000;AMETHYSTS;9995;24;;;;;10005;24;;;;;10000.0;0.0
-2;29000;STARFRUIT;4989;24;;;;;4990;1;4996;24;;;4989.5;0.0
-2;29600;STARFRUIT;4992;2;4991;150;4990;28;4995;2;4996;4;4997;59;4993.5;0.0
-2;29600;AMETHYSTS;9996;10;9995;166;;;9998;1;10002;1;10004;10;9997.0;0.0
-2;29900;STARFRUIT;4992;2;4991;34;4990;52;4995;1;4997;53;4998;25;4993.5;0.0
-2;29900;AMETHYSTS;9998;6;9996;2;9995;76;10002;4;10004;2;10005;76;10000.0;0.0
-2;30200;AMETHYSTS;9998;3;9996;5;9995;78;10004;5;10005;78;;;10001.0;0.0
-2;30200;STARFRUIT;4991;52;4990;31;;;4997;63;4998;20;;;4994.0;0.0
-2;30300;STARFRUIT;4996;1;4991;31;;;4998;31;;;;;4997.0;0.0
-2;30300;AMETHYSTS;9996;2;9995;29;;;10002;9;10004;2;10005;29;9999.0;0.0
-2;30400;STARFRUIT;4994;5;4991;31;;;4997;2;4998;29;;;4995.5;0.0
-2;30400;AMETHYSTS;10000;5;9996;2;9995;29;10002;8;10004;2;10005;29;10001.0;0.0
-2;30500;STARFRUIT;4991;22;;;;;4998;22;;;;;4994.5;0.0
-2;30500;AMETHYSTS;9998;5;9996;2;9995;20;10004;2;10005;20;;;10001.0;0.0
-2;30800;STARFRUIT;4993;3;4992;82;;;4998;3;4999;80;;;4995.5;0.0
-2;30800;AMETHYSTS;9996;3;9995;80;;;10002;4;10004;3;10005;80;9999.0;0.0
-2;30900;STARFRUIT;4991;30;;;;;4996;7;4998;30;;;4993.5;0.0
-2;30900;AMETHYSTS;9996;2;9995;28;;;10002;6;10004;2;10005;28;9999.0;0.0
-2;31000;AMETHYSTS;10000;4;9996;1;9995;22;10004;1;10005;22;;;10002.0;0.0
-2;31000;STARFRUIT;4995;4;4993;7;4992;23;4998;1;4999;22;;;4996.5;0.0
-2;31200;STARFRUIT;4992;60;;;;;4999;60;;;;;4995.5;0.0
-2;31200;AMETHYSTS;9996;4;9995;56;;;10002;6;10004;4;10005;56;9999.0;0.0
-2;31300;STARFRUIT;4992;24;;;;;4999;24;;;;;4995.5;0.0
-2;31300;AMETHYSTS;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;0.0
-2;31400;AMETHYSTS;9995;26;;;;;9998;1;10005;26;;;9996.5;0.0
-2;31400;STARFRUIT;4992;26;;;;;4999;26;;;;;4995.5;0.0
-2;31500;STARFRUIT;4993;5;4992;30;;;4999;30;;;;;4996.0;0.0
-2;31500;AMETHYSTS;9995;30;;;;;10005;30;;;;;10000.0;0.0
-2;31600;STARFRUIT;4997;1;4992;27;;;4998;27;;;;;4997.5;0.0
-2;31600;AMETHYSTS;9995;27;;;;;10005;27;;;;;10000.0;0.0
-2;31700;STARFRUIT;4991;24;;;;;4996;3;4998;24;;;4993.5;0.0
-2;31700;AMETHYSTS;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;0.0
-2;31800;AMETHYSTS;10000;6;9996;1;9995;25;10004;1;10005;25;;;10002.0;0.0
-2;31800;STARFRUIT;4993;6;4991;1;4990;25;4997;26;;;;;4995.0;0.0
-2;32000;STARFRUIT;4992;3;4991;28;4990;28;4997;28;4998;25;;;4994.5;0.0
-2;32000;AMETHYSTS;9998;3;9996;1;9995;52;10004;1;10005;52;;;10001.0;0.0
-2;32100;STARFRUIT;4991;29;;;;;4997;1;4998;28;;;4994.0;0.0
-2;32100;AMETHYSTS;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;0.0
-2;32200;STARFRUIT;4991;28;;;;;4997;1;4998;27;;;4994.0;0.0
-2;32200;AMETHYSTS;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;0.0
-2;32300;STARFRUIT;4991;25;;;;;4998;25;;;;;4994.5;0.0
-2;32300;AMETHYSTS;9995;25;;;;;10005;25;;;;;10000.0;0.0
-2;32700;STARFRUIT;4991;75;4990;30;;;4996;5;4997;34;4998;73;4993.5;0.0
-2;32700;AMETHYSTS;10002;1;9998;1;9996;4;10004;4;10005;103;;;10003.0;0.0
-2;32900;AMETHYSTS;9996;4;9995;55;;;10004;4;10005;55;;;10000.0;0.0
-2;32900;STARFRUIT;4991;4;4990;55;;;4997;59;;;;;4994.0;0.0
-2;33400;STARFRUIT;4991;48;4990;74;;;4996;4;4997;76;4998;56;4993.5;0.0
-2;33400;AMETHYSTS;9996;7;9995;126;;;10002;10;10004;7;10005;126;9999.0;0.0
-2;33500;STARFRUIT;4990;21;;;;;4997;21;;;;;4993.5;0.0
-2;33500;AMETHYSTS;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;0.0
-2;33600;STARFRUIT;4990;27;;;;;4997;27;;;;;4993.5;0.0
-2;33600;AMETHYSTS;10002;6;9995;27;;;10005;27;;;;;10003.5;0.0
-2;33800;STARFRUIT;4994;3;4991;9;4990;54;4996;2;4997;52;;;4995.0;0.0
-2;33800;AMETHYSTS;9996;2;9995;52;;;10002;1;10004;2;10005;52;9999.0;0.0
-2;34200;STARFRUIT;4992;2;4991;46;4990;53;4995;8;4996;1;4997;55;4993.5;0.0
-2;34200;AMETHYSTS;10002;1;9996;1;9995;99;10004;1;10005;99;;;10003.0;0.0
-2;34300;AMETHYSTS;10002;1;9996;1;9995;22;10004;1;10005;22;;;10003.0;0.0
-2;34300;STARFRUIT;4990;23;;;;;4997;23;;;;;4993.5;0.0
-2;34400;AMETHYSTS;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;0.0
-2;34400;STARFRUIT;4991;3;4990;25;;;4996;25;;;;;4993.5;0.0
-2;34500;AMETHYSTS;9995;30;;;;;10005;30;;;;;10000.0;0.0
-2;34500;STARFRUIT;4990;30;;;;;4991;5;4995;1;4997;30;4990.5;0.0
-2;34800;AMETHYSTS;9998;6;9996;2;9995;76;10004;2;10005;76;;;10001.0;0.0
-2;34800;STARFRUIT;4991;25;4990;52;;;4997;55;4998;23;;;4994.0;0.0
-2;34900;AMETHYSTS;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;0.0
-2;34900;STARFRUIT;4991;21;;;;;4998;21;;;;;4994.5;0.0
-2;35000;STARFRUIT;4997;1;4992;20;;;4999;20;;;;;4998.0;0.0
-2;35000;AMETHYSTS;10002;1;9995;20;;;10005;20;;;;;10003.5;0.0
-2;35100;AMETHYSTS;10002;3;9996;2;9995;29;10004;2;10005;29;;;10003.0;0.0
-2;35100;STARFRUIT;4992;31;;;;;4998;2;4999;29;;;4995.0;0.0
-2;35800;STARFRUIT;4993;83;4992;111;;;4994;2;4998;1;4999;109;4993.5;0.0
-2;35800;AMETHYSTS;9998;13;9996;8;9995;189;10002;7;10004;8;10005;189;10000.0;0.0
-2;35900;AMETHYSTS;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;0.0
-2;35900;STARFRUIT;4993;23;;;;;5000;23;;;;;4996.5;0.0
-2;36000;AMETHYSTS;9995;30;;;;;10002;5;10005;30;;;9998.5;0.0
-2;36000;STARFRUIT;4993;30;;;;;4998;3;5000;30;;;4995.5;0.0
-2;36600;STARFRUIT;4993;60;4992;96;;;4994;2;4997;5;4999;100;4993.5;0.0
-2;36600;AMETHYSTS;10002;7;9998;1;9996;6;10004;6;10005;147;;;10003.0;0.0
-2;36700;STARFRUIT;4992;21;;;;;4999;21;;;;;4995.5;0.0
-2;36700;AMETHYSTS;9995;21;;;;;10005;21;;;;;10000.0;0.0
-2;36800;AMETHYSTS;9995;30;;;;;10005;30;;;;;10000.0;0.0
-2;36800;STARFRUIT;4993;30;;;;;5000;30;;;;;4996.5;0.0
-2;36900;STARFRUIT;4992;27;;;;;4999;27;;;;;4995.5;0.0
-2;36900;AMETHYSTS;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;0.0
-2;37000;STARFRUIT;4991;25;;;;;4998;25;;;;;4994.5;0.0
-2;37000;AMETHYSTS;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;0.0
-2;37100;STARFRUIT;4992;4;4991;23;;;4998;23;;;;;4995.0;0.0
-2;37100;AMETHYSTS;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;0.0
-2;37200;AMETHYSTS;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;0.0
-2;37200;STARFRUIT;4992;4;4991;21;;;4998;21;;;;;4995.0;0.0
-2;37600;AMETHYSTS;9996;3;9995;104;;;9998;7;10002;11;10004;3;9997.0;0.0
-2;37600;STARFRUIT;4992;4;4991;52;4990;55;4997;79;4998;28;;;4994.5;0.0
-2;37700;STARFRUIT;4991;24;;;;;4998;24;;;;;4994.5;0.0
-2;37700;AMETHYSTS;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;0.0
-2;38000;AMETHYSTS;10002;1;9996;2;9995;80;10004;2;10005;80;;;10003.0;0.0
-2;38000;STARFRUIT;4991;81;;;;;4996;4;4998;82;;;4993.5;0.0
-2;38100;STARFRUIT;4991;28;;;;;4997;2;4998;26;;;4994.0;0.0
-2;38100;AMETHYSTS;9996;2;9995;26;;;10002;2;10004;2;10005;26;9999.0;0.0
-2;38200;STARFRUIT;4991;28;;;;;4997;1;4998;27;;;4994.0;0.0
-2;38200;AMETHYSTS;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;0.0
-2;38300;STARFRUIT;4991;26;;;;;4998;26;;;;;4994.5;0.0
-2;38300;AMETHYSTS;9998;5;9995;26;;;10005;26;;;;;10001.5;0.0
-2;38400;AMETHYSTS;9996;1;9995;23;;;10000;6;10004;1;10005;23;9998.0;0.0
-2;38400;STARFRUIT;4991;1;4990;23;;;4993;6;4997;24;;;4992.0;0.0
-2;38600;STARFRUIT;4991;2;4990;49;;;4997;51;;;;;4994.0;0.0
-2;38600;AMETHYSTS;10002;1;9996;2;9995;49;10004;2;10005;49;;;10003.0;0.0
-2;38800;AMETHYSTS;9996;1;9995;40;;;10002;1;10004;1;10005;40;9999.0;0.0
-2;38800;STARFRUIT;4991;41;;;;;4993;2;4996;1;4998;41;4992.0;0.0
-2;39000;STARFRUIT;4992;2;4991;53;;;4996;7;4998;55;;;4994.0;0.0
-2;39000;AMETHYSTS;9996;2;9995;53;;;10002;9;10004;2;10005;53;9999.0;0.0
-2;39100;STARFRUIT;4992;25;;;;;4998;1;4999;24;;;4995.0;0.0
-2;39100;AMETHYSTS;9998;8;9996;1;9995;24;10004;1;10005;24;;;10001.0;0.0
-2;39400;STARFRUIT;4993;31;4992;57;;;4997;2;4998;5;4999;58;4995.0;0.0
-2;39400;AMETHYSTS;9996;2;9995;86;;;10004;2;10005;86;;;10000.0;0.0
-2;39500;STARFRUIT;4992;27;;;;;4997;3;4999;27;;;4994.5;0.0
-2;39500;AMETHYSTS;9995;27;;;;;9998;1;10002;2;10005;27;9996.5;0.0
-2;39700;STARFRUIT;4997;4;4993;4;4992;47;4998;2;4999;45;;;4997.5;0.0
-2;39700;AMETHYSTS;9996;2;9995;45;;;10004;2;10005;45;;;10000.0;0.0
-2;39800;STARFRUIT;4991;28;;;;;4998;28;;;;;4994.5;0.0
-2;39800;AMETHYSTS;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;0.0
-2;39900;STARFRUIT;4992;31;;;;;4998;1;4999;30;;;4995.0;0.0
-2;39900;AMETHYSTS;9996;1;9995;30;;;10002;4;10004;1;10005;30;9999.0;0.0
-2;40100;STARFRUIT;4992;24;4991;29;;;4998;31;4999;22;;;4995.0;0.0
-2;40100;AMETHYSTS;9996;2;9995;51;;;10002;8;10004;2;10005;51;9999.0;0.0
-2;40200;STARFRUIT;4992;29;;;;;4999;29;;;;;4995.5;0.0
-2;40200;AMETHYSTS;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;0.0
-2;40300;STARFRUIT;4992;22;;;;;4999;22;;;;;4995.5;0.0
-2;40300;AMETHYSTS;9995;22;;;;;9998;1;10005;22;;;9996.5;0.0
-2;40500;STARFRUIT;4992;53;;;;;4993;1;4999;53;;;4992.5;0.0
-2;40500;AMETHYSTS;10002;1;9996;3;9995;50;10004;3;10005;50;;;10003.0;0.0
-2;40700;STARFRUIT;4993;4;4992;48;;;4998;2;4999;46;;;4995.5;0.0
-2;40700;AMETHYSTS;9998;7;9996;4;9995;44;10004;4;10005;44;;;10001.0;0.0
-2;40800;AMETHYSTS;9995;27;;;;;10005;27;;;;;10000.0;0.0
-2;40800;STARFRUIT;4991;27;;;;;4998;27;;;;;4994.5;0.0
-2;41000;STARFRUIT;4991;49;;;;;4992;1;4996;3;4998;49;4991.5;0.0
-2;41000;AMETHYSTS;9998;10;9996;2;9995;47;10002;10;10004;2;10005;47;10000.0;0.0
-2;41200;STARFRUIT;4990;56;;;;;4991;1;4992;2;4997;56;4990.5;0.0
-2;41200;AMETHYSTS;9995;56;;;;;10005;56;;;;;10000.0;0.0
-2;41300;STARFRUIT;4991;1;4990;24;;;4995;4;4997;25;;;4993.0;0.0
-2;41300;AMETHYSTS;9998;2;9996;1;9995;24;10004;1;10005;24;;;10001.0;0.0
-2;41400;STARFRUIT;4991;2;4990;23;;;4993;4;4995;5;4997;25;4992.0;0.0
-2;41400;AMETHYSTS;9998;5;9996;2;9995;23;10000;4;10004;2;10005;23;9999.0;0.0




Trade History:
null