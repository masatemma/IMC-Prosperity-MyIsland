Sandbox logs:
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nproduct name: AMETHYSTS\nstarting_position: 0",
  "timestamp": 0
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)",
  "timestamp": 100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)",
  "timestamp": 200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)",
  "timestamp": 300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)",
  "timestamp": 400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)",
  "timestamp": 500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)",
  "timestamp": 600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)",
  "timestamp": 700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)",
  "timestamp": 800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)",
  "timestamp": 900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)",
  "timestamp": 1000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)",
  "timestamp": 1100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)",
  "timestamp": 1200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)",
  "timestamp": 1300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)",
  "timestamp": 1400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)",
  "timestamp": 1500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)",
  "timestamp": 1600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)",
  "timestamp": 1700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)",
  "timestamp": 1800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)",
  "timestamp": 1900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)",
  "timestamp": 2000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)",
  "timestamp": 2100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)",
  "timestamp": 2200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)",
  "timestamp": 2300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)",
  "timestamp": 2400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)",
  "timestamp": 2500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)",
  "timestamp": 2600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)",
  "timestamp": 2700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)",
  "timestamp": 2800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)",
  "timestamp": 2900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e9c72664-f9a1-4933-b5aa-1a18ff6cdf54\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e9c72664-f9a1-4933-b5aa-1a18ff6cdf54\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 3000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)",
  "timestamp": 3100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d96b391f-b461-4054-b944-d8e2d37643f3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d96b391f-b461-4054-b944-d8e2d37643f3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 3200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)",
  "timestamp": 3300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8b8a3590-58b2-4d9d-a06e-f1dd9e01bcb1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8b8a3590-58b2-4d9d-a06e-f1dd9e01bcb1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 3400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)",
  "timestamp": 3500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b0117142-0d64-49af-a538-d6e9b33044f0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b0117142-0d64-49af-a538-d6e9b33044f0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 3600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 3700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"0a31e7d1-e9b0-40ce-9ae8-4dda33971769\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"0a31e7d1-e9b0-40ce-9ae8-4dda33971769\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 3800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 3900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 4000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 4100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 4200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"632de1ae-0d01-466c-bda7-1238d2c11550\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"632de1ae-0d01-466c-bda7-1238d2c11550\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 4300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"1b790bf1-952d-405d-a3f5-7a0217f97699\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"1b790bf1-952d-405d-a3f5-7a0217f97699\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 4400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"4ab42cf2-59cc-4803-8228-326953954a97\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"4ab42cf2-59cc-4803-8228-326953954a97\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 4500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"37e70114-2f82-4705-a80e-1d03f00d4cfa\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"37e70114-2f82-4705-a80e-1d03f00d4cfa\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 4600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3545e4aa-1bc5-4b4f-84b1-cbad56b2c332\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3545e4aa-1bc5-4b4f-84b1-cbad56b2c332\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 4700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a0cf499b-0bda-4866-886e-a0ff35c79c67\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a0cf499b-0bda-4866-886e-a0ff35c79c67\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 4800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c9f16ab7-980e-4b00-bc94-be6f3363f119\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c9f16ab7-980e-4b00-bc94-be6f3363f119\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 4900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 5000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"cb330758-f6d7-47a7-9e58-f35518c790c3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"cb330758-f6d7-47a7-9e58-f35518c790c3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 5100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 5200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 5300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a2adb482-1a44-40e0-99e6-d4301ca5bb79\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a2adb482-1a44-40e0-99e6-d4301ca5bb79\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 5400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 5500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 5600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6ef8ad1a-3f80-4711-ae53-a5b377960117\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6ef8ad1a-3f80-4711-ae53-a5b377960117\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 5700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"341603cf-e629-4aa0-abb1-3e8fa85a2c46\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"341603cf-e629-4aa0-abb1-3e8fa85a2c46\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 5800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 5900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"5c53c9e9-bb31-4d04-87f0-53ffa078ccc5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"5c53c9e9-bb31-4d04-87f0-53ffa078ccc5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 6000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6206d63c-79f2-4790-b2e8-fff6c27f5fa4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6206d63c-79f2-4790-b2e8-fff6c27f5fa4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 6100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"11346221-227c-4e7b-892b-7fafabecd2e5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"11346221-227c-4e7b-892b-7fafabecd2e5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 6200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 6300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 6400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 6500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"305e8ad8-a974-4d0e-8547-a8054aaa6986\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"305e8ad8-a974-4d0e-8547-a8054aaa6986\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 6600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"13a98e47-9948-4df9-873d-e82920582307\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"13a98e47-9948-4df9-873d-e82920582307\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 6700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"71d6318c-2d28-4fe6-9b45-5bcbe764eb50\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"71d6318c-2d28-4fe6-9b45-5bcbe764eb50\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 6800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7923e7da-9954-473c-9926-119cf8a21a4a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7923e7da-9954-473c-9926-119cf8a21a4a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 6900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"00da3b1a-f451-423b-bf51-eeef590e8b8d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"00da3b1a-f451-423b-bf51-eeef590e8b8d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 7000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"776d609c-14f3-48e4-86aa-5e3d2eeaf8d6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"776d609c-14f3-48e4-86aa-5e3d2eeaf8d6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 7100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 7200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 7300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"00bb645a-6ca2-4faa-9fce-60f09120a70a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"00bb645a-6ca2-4faa-9fce-60f09120a70a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 7400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"10f3cc1e-b1b2-47cb-8edc-50092df9747f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"10f3cc1e-b1b2-47cb-8edc-50092df9747f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 7500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 7600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"2e91ff7c-1636-4462-b434-5b9d0386163f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"2e91ff7c-1636-4462-b434-5b9d0386163f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 7700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"f5ed76b6-c9d1-48ef-ae59-4949c9d6100f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"f5ed76b6-c9d1-48ef-ae59-4949c9d6100f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 7800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 7900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 8000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 8100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 8200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 8300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 8400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 8500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"5ebb062a-3abc-49b5-8e9e-2875dc531601\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"5ebb062a-3abc-49b5-8e9e-2875dc531601\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 8600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"93b866fd-0e25-45d1-b52e-b20c628f1724\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"93b866fd-0e25-45d1-b52e-b20c628f1724\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 8700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"387e8c6a-5e7d-43c1-beee-3368acc9c7df\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"387e8c6a-5e7d-43c1-beee-3368acc9c7df\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 8800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"ea659133-a865-4211-8beb-216ab82a5cc9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"ea659133-a865-4211-8beb-216ab82a5cc9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 8900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 9000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 9100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"aff92230-8f15-4fff-8e4c-06fcc8f5353b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"aff92230-8f15-4fff-8e4c-06fcc8f5353b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 9200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3ecbbd41-76e0-4575-9422-c19c575493c4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3ecbbd41-76e0-4575-9422-c19c575493c4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 9300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 9400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 9500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 9600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 9700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 9800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 9900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d721b55a-bb83-4c8b-8875-e64ab53accde\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d721b55a-bb83-4c8b-8875-e64ab53accde\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 10000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 10100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 10200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a6a0925a-42d1-48b1-a178-b7b1316c1e61\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a6a0925a-42d1-48b1-a178-b7b1316c1e61\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 10300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a0b563a2-e34c-4420-b9fc-29b525c40101\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a0b563a2-e34c-4420-b9fc-29b525c40101\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 10400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 10500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"4cf4e212-7da0-42f7-ad72-3d146618302d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"4cf4e212-7da0-42f7-ad72-3d146618302d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 10600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 10700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 10800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 10900
}
{
  "sandboxLog": "Lambda errors have reached maximum value for submission 9d326d84-df57-4200-9842-502a76d77457",
  "lambdaLog": null,
  "timestamp": 10920
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d5061d56-acee-48e5-b7d8-695fa8561144\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d5061d56-acee-48e5-b7d8-695fa8561144\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 11000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 11100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 11200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"4290c9af-cf7e-4ad6-983a-627dd2944cab\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"4290c9af-cf7e-4ad6-983a-627dd2944cab\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 11300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"85ea3b2a-972c-43f5-a540-a08cade935fa\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"85ea3b2a-972c-43f5-a540-a08cade935fa\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 11400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b18919d0-9b87-426d-9599-011d3c8af15e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b18919d0-9b87-426d-9599-011d3c8af15e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 11500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a57e0c4a-f17f-4798-9d23-d1801f1b01e2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a57e0c4a-f17f-4798-9d23-d1801f1b01e2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 11600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"65fc48cf-7445-43df-9182-31122d5338b8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"65fc48cf-7445-43df-9182-31122d5338b8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 11700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c0ee9eb0-1d36-4901-b975-3d6ed6de5295\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c0ee9eb0-1d36-4901-b975-3d6ed6de5295\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 11800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6580466c-bf7b-4b92-83a7-1d714d06ef73\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6580466c-bf7b-4b92-83a7-1d714d06ef73\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 11900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e21e3942-78bc-4611-ac4d-8d390928b75d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e21e3942-78bc-4611-ac4d-8d390928b75d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 12000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7ece2838-c379-425e-8a12-a818ee95935c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7ece2838-c379-425e-8a12-a818ee95935c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 12100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 12200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8ff5a751-237e-4b79-bddb-ede8a3ada310\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8ff5a751-237e-4b79-bddb-ede8a3ada310\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 12300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 12400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"2681e3e3-cded-441c-ae56-30bd5be9d089\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"2681e3e3-cded-441c-ae56-30bd5be9d089\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 12500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"47919324-2143-4275-bcfa-56322bb95e0b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"47919324-2143-4275-bcfa-56322bb95e0b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 12600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 12700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 12800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 12900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 13000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c1850e67-3329-403d-9358-e5797bf45f45\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c1850e67-3329-403d-9358-e5797bf45f45\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 13100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"5d704d86-d9c8-4c49-bb08-f291b7dc4c4a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"5d704d86-d9c8-4c49-bb08-f291b7dc4c4a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 13200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"881f820c-f837-477d-86ff-71976a30c2fa\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"881f820c-f837-477d-86ff-71976a30c2fa\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 13300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 13400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 13500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6f1e0c48-72c4-4f5e-ba78-a8d490710b9a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6f1e0c48-72c4-4f5e-ba78-a8d490710b9a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 13600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"ec2ee2a9-d304-4a0d-b541-57f43cbcdcc0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"ec2ee2a9-d304-4a0d-b541-57f43cbcdcc0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 13700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 13800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d094b8ca-a9d5-4ecf-9aad-097c111d467f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d094b8ca-a9d5-4ecf-9aad-097c111d467f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 13900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 14000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 14100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 14200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 14300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 14400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 14500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 14600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d1021de8-9a27-4c8f-a1d0-890a866ca828\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d1021de8-9a27-4c8f-a1d0-890a866ca828\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 14700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 14800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 14900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"bffc1ca0-1f81-40bd-a5cb-61168346e305\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"bffc1ca0-1f81-40bd-a5cb-61168346e305\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 15000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c5f2f6d9-634f-499b-a756-ad25bba40047\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c5f2f6d9-634f-499b-a756-ad25bba40047\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 15100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"5f9999ad-b946-4d24-9e24-a4f3990d2f5a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"5f9999ad-b946-4d24-9e24-a4f3990d2f5a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 15200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7c604f4b-7b68-44fd-a60b-de32eab5734b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7c604f4b-7b68-44fd-a60b-de32eab5734b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 15300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"9045c0d9-0733-43f3-bc28-df98ba290204\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"9045c0d9-0733-43f3-bc28-df98ba290204\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 15400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"0818eda7-710b-49b3-a837-0ed9b87f6ca1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"0818eda7-710b-49b3-a837-0ed9b87f6ca1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 15500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3ab2e93d-d8fe-48c5-a48f-44ca17fd5cb1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3ab2e93d-d8fe-48c5-a48f-44ca17fd5cb1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 15600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"4642fd98-7d96-4d82-a869-a609d777b04c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"4642fd98-7d96-4d82-a869-a609d777b04c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 15700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"be862163-5c6c-43a8-9b5a-32777a0ab04a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"be862163-5c6c-43a8-9b5a-32777a0ab04a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 15800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"29867f25-496f-4860-bdd5-cbe53476921e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"29867f25-496f-4860-bdd5-cbe53476921e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 15900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"22ef9460-c297-4429-bd08-dcde37548e29\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"22ef9460-c297-4429-bd08-dcde37548e29\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 16000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 16100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"bff61f53-efea-4990-8ab2-b1a9867a57d1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"bff61f53-efea-4990-8ab2-b1a9867a57d1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 16200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a8bf7fe7-41fb-4907-a23e-edfe239bb8e8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a8bf7fe7-41fb-4907-a23e-edfe239bb8e8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 16300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"10d4ba1c-3645-4653-9d38-e4ac3c44d649\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"10d4ba1c-3645-4653-9d38-e4ac3c44d649\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 16400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"51c88878-bdd2-4ba8-9ba7-31f33382c26b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"51c88878-bdd2-4ba8-9ba7-31f33382c26b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 16500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"4aeb8752-8ab7-499c-a22b-634c08614fc8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"4aeb8752-8ab7-499c-a22b-634c08614fc8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 16600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b764b6ea-07cc-4860-b028-fda22fdd2f80\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b764b6ea-07cc-4860-b028-fda22fdd2f80\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 16700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"574063aa-7413-4e96-9b23-0550c23b35e3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"574063aa-7413-4e96-9b23-0550c23b35e3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 16800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 16900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 17000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 17100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 17200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 17300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 17400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 17500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 17600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 17700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"39538524-8796-4d47-880a-25b696bd582c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"39538524-8796-4d47-880a-25b696bd582c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 17800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 17900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 18000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 18100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"cadf2487-7725-48df-9e1f-dafdc48bd227\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"cadf2487-7725-48df-9e1f-dafdc48bd227\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 18200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"cca7134e-b562-4093-8b74-fe984123bd07\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"cca7134e-b562-4093-8b74-fe984123bd07\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 18300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 18400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3c5f1c73-f86b-4a64-ab5f-b5477237aaf6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3c5f1c73-f86b-4a64-ab5f-b5477237aaf6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 18500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"efe86751-6c4a-435c-b2b6-e7a2a42672da\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"efe86751-6c4a-435c-b2b6-e7a2a42672da\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 18600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"aa5ab122-cb65-4af8-8e55-79e245b3a7c5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"aa5ab122-cb65-4af8-8e55-79e245b3a7c5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 18700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 18800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"369fb561-ec20-4089-b068-ac627ca8ff45\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"369fb561-ec20-4089-b068-ac627ca8ff45\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 18900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"613d2c0d-4904-4e8a-bf79-eb807045a3a6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"613d2c0d-4904-4e8a-bf79-eb807045a3a6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 19000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"38feeb34-324d-4b8c-85dc-37004eb4f60a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"38feeb34-324d-4b8c-85dc-37004eb4f60a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 19100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"0041c995-4231-450c-9bf1-6021af447128\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"0041c995-4231-450c-9bf1-6021af447128\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 19200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"4733b5f9-4724-4ea3-8f44-1bc02d7549f1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"4733b5f9-4724-4ea3-8f44-1bc02d7549f1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 19300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 19400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 19500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 19600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d240e6e7-be4e-42d2-b92e-fac7556da782\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d240e6e7-be4e-42d2-b92e-fac7556da782\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 19700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7859f524-1e2f-4bfa-bd2e-d0dfd13b3ffe\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7859f524-1e2f-4bfa-bd2e-d0dfd13b3ffe\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 19800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 19900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7c8162d3-be16-4b66-b13c-f697c634930b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7c8162d3-be16-4b66-b13c-f697c634930b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 20000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"fcc71435-fced-4f69-9a3b-ee21449e1db9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"fcc71435-fced-4f69-9a3b-ee21449e1db9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 20100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"f8f20164-f01e-44d4-bb41-03032ccd992d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"f8f20164-f01e-44d4-bb41-03032ccd992d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 20200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6cbcd76d-2cf1-4120-831b-4e9957cee90d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6cbcd76d-2cf1-4120-831b-4e9957cee90d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 20300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3e328061-eaf2-412e-b661-86fa1d9dddb6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3e328061-eaf2-412e-b661-86fa1d9dddb6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 20400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"bdb09b45-5c71-4176-8d3d-12bbfabd95b3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"bdb09b45-5c71-4176-8d3d-12bbfabd95b3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 20500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"65a1b868-4cf8-4252-97f7-2c7f510a00a7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"65a1b868-4cf8-4252-97f7-2c7f510a00a7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 20600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"17ebdf85-3b5d-4643-8076-703a5ab340d1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"17ebdf85-3b5d-4643-8076-703a5ab340d1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 20700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"55bcf40c-ad71-4eb9-a857-043b06dcc87a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"55bcf40c-ad71-4eb9-a857-043b06dcc87a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 20800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 20900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 21000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7be350f8-c9c3-448f-8117-6dbd51f24a13\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7be350f8-c9c3-448f-8117-6dbd51f24a13\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 21100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 21200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"be97683a-952b-4a3e-ad0c-399b617b767a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"be97683a-952b-4a3e-ad0c-399b617b767a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 21300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 21400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 21500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"25f0f098-2e08-42fa-ae7d-523a6b7c7955\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"25f0f098-2e08-42fa-ae7d-523a6b7c7955\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 21600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 21700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 21800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 21900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"0d8ce263-34fc-47e4-95d2-206891b243aa\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"0d8ce263-34fc-47e4-95d2-206891b243aa\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 22000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a0a21668-6ae0-4cac-b567-929e31fc38ad\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a0a21668-6ae0-4cac-b567-929e31fc38ad\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 22100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6f99d3a8-2da0-43c5-a873-fe2cf56444dc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6f99d3a8-2da0-43c5-a873-fe2cf56444dc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 22200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 22300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 22400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 22500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 22600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"17015114-0bf7-4e1a-b1f0-18c3b6569d94\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"17015114-0bf7-4e1a-b1f0-18c3b6569d94\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 22700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e837960a-7a70-4fe0-82b0-444c3970b938\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e837960a-7a70-4fe0-82b0-444c3970b938\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 22800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a65eefb5-3447-4bc9-a04b-2068285db064\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a65eefb5-3447-4bc9-a04b-2068285db064\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 22900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 23000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"494d9f65-d0da-4eca-b2e3-d60afc841b3c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"494d9f65-d0da-4eca-b2e3-d60afc841b3c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 23100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 23200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6d4c4645-b469-466d-8b49-5742a031b877\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6d4c4645-b469-466d-8b49-5742a031b877\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 23300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8f2df496-2b22-4637-b0fb-03bd7ea2e892\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8f2df496-2b22-4637-b0fb-03bd7ea2e892\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 23400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8e884229-6c76-4d29-9bbe-002681208a12\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8e884229-6c76-4d29-9bbe-002681208a12\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 23500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"39749c90-4d82-4433-a538-011d83acbed8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"39749c90-4d82-4433-a538-011d83acbed8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 23600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 23700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"dd485201-5a97-4595-9c86-f3d98526e1a5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"dd485201-5a97-4595-9c86-f3d98526e1a5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 23800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 23900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 24000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"1223c3ec-82c7-40c6-a154-c9b4600b7ae6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"1223c3ec-82c7-40c6-a154-c9b4600b7ae6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 24100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"503dce71-22f0-4a11-a289-9fd1dddad198\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"503dce71-22f0-4a11-a289-9fd1dddad198\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 24200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 24300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 24400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b39111eb-05f7-48be-adde-5d5e035c0dcd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b39111eb-05f7-48be-adde-5d5e035c0dcd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 24500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"866c50a4-d0ee-477b-b13b-b54621a7f696\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"866c50a4-d0ee-477b-b13b-b54621a7f696\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 24600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"9c24e559-7d74-4130-9734-48f56793c012\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"9c24e559-7d74-4130-9734-48f56793c012\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 24700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 24800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 24900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6cc70495-6453-47e6-9623-ee6ef7044fbc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6cc70495-6453-47e6-9623-ee6ef7044fbc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 25000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 25100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"43287850-a1a9-4e28-80e1-ec05d0cb483f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"43287850-a1a9-4e28-80e1-ec05d0cb483f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 25200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"42d3a816-cc36-4663-a7de-61fe642d4957\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"42d3a816-cc36-4663-a7de-61fe642d4957\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 25300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3cea6585-6038-4b04-9433-0f2c899e79cb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3cea6585-6038-4b04-9433-0f2c899e79cb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 25400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"999c82e0-a3c6-409d-b16c-83b2c29b1a28\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"999c82e0-a3c6-409d-b16c-83b2c29b1a28\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 25500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 25600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 25700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8fc386ea-38c2-4764-9396-91dc0f30ae24\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8fc386ea-38c2-4764-9396-91dc0f30ae24\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 25800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"980e8ee1-15b5-49b4-bc1f-f3bb18d7dfee\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"980e8ee1-15b5-49b4-bc1f-f3bb18d7dfee\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 25900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6266cea2-5f01-4c66-ba02-40ac056da64e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6266cea2-5f01-4c66-ba02-40ac056da64e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 26000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e4f591c4-1e34-4a3c-bd4a-36f620287dea\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e4f591c4-1e34-4a3c-bd4a-36f620287dea\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 26100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 26200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 26300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d2d68293-7e97-4fdd-b265-c2e66fc0f366\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d2d68293-7e97-4fdd-b265-c2e66fc0f366\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 26400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c4eb8139-95f9-4e79-89f3-8fad4173f7ed\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c4eb8139-95f9-4e79-89f3-8fad4173f7ed\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 26500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 26600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c7d211b0-4d45-4492-bb81-1e9d4cef0127\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c7d211b0-4d45-4492-bb81-1e9d4cef0127\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 26700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"71b2bcca-8965-47c5-a028-3a594b529ccf\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"71b2bcca-8965-47c5-a028-3a594b529ccf\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 26800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"f98ecc9d-c0c4-4524-987d-78b082921763\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"f98ecc9d-c0c4-4524-987d-78b082921763\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 26900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e0f10b5d-a4f9-4a31-b155-8f8b951f35f0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e0f10b5d-a4f9-4a31-b155-8f8b951f35f0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 27000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e2664728-e77e-4872-97c3-6ca484435182\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e2664728-e77e-4872-97c3-6ca484435182\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 27100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 27200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 27300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e447f24f-7429-421b-8cb0-bbcc7eedd494\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e447f24f-7429-421b-8cb0-bbcc7eedd494\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 27400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 27500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d646a014-aa00-4d83-86c0-3141e17ea6ce\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d646a014-aa00-4d83-86c0-3141e17ea6ce\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 27600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"87baf35c-8f18-46f1-9717-f1637841f525\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"87baf35c-8f18-46f1-9717-f1637841f525\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 27700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b46c49bf-7680-47d4-8db6-6c9243606409\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b46c49bf-7680-47d4-8db6-6c9243606409\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 27800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"ec03de49-3b7a-40c3-9959-cbf6ad916c63\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"ec03de49-3b7a-40c3-9959-cbf6ad916c63\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 27900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7ce19fe3-e47a-4fca-b0da-647666e8782b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7ce19fe3-e47a-4fca-b0da-647666e8782b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 28000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 28100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 28200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 28300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"0593c082-d412-4ecb-bacd-b803725543c1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"0593c082-d412-4ecb-bacd-b803725543c1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 28400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"f6620aab-e6b3-4452-bcc4-1023f2d5b968\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"f6620aab-e6b3-4452-bcc4-1023f2d5b968\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 28500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 28600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 28700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 28800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 28900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 29000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6b934bc5-119e-43c5-ac9b-501b060154e9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6b934bc5-119e-43c5-ac9b-501b060154e9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 29100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"491dd6ed-569a-48b4-bb3a-153ce4d67ddb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"491dd6ed-569a-48b4-bb3a-153ce4d67ddb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 29200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"0c1a2094-fb2e-463f-a98a-5d53439d8b5c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"0c1a2094-fb2e-463f-a98a-5d53439d8b5c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 29300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"007be60e-7904-44be-baaa-df743cea41af\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"007be60e-7904-44be-baaa-df743cea41af\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 29400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d5981a75-6eba-46d0-84f2-4e87394d4118\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d5981a75-6eba-46d0-84f2-4e87394d4118\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 29500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 29600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"809a84e0-c51a-4eb0-9153-d7eddbc486b0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"809a84e0-c51a-4eb0-9153-d7eddbc486b0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 29700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"9d73dea0-7e9a-42cd-b061-91feea206ce6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"9d73dea0-7e9a-42cd-b061-91feea206ce6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 29800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 29900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"724275eb-6fc9-44f1-9930-cfd74ca9216c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"724275eb-6fc9-44f1-9930-cfd74ca9216c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 30000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3a069209-6409-4a7f-9c42-1fa58c39ad2b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3a069209-6409-4a7f-9c42-1fa58c39ad2b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 30100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 30200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 30300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 30400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 30500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8a7f0a0f-f513-4947-aa05-fea028213fda\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8a7f0a0f-f513-4947-aa05-fea028213fda\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 30600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c8a7a6ff-eed2-4323-ba86-0eeed26634c8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c8a7a6ff-eed2-4323-ba86-0eeed26634c8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 30700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 30800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 30900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 31000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b1ff3fb9-eb56-4449-8ca1-1c3438396df6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b1ff3fb9-eb56-4449-8ca1-1c3438396df6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 31100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 31200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 31300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 31400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 31500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 31600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 31700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 31800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b54d0f14-5683-4b14-a9fa-14bf8ef0a2de\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b54d0f14-5683-4b14-a9fa-14bf8ef0a2de\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 31900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 32000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 32100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 32200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 32300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a204f000-052d-4620-a60e-7a61b0e296a1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a204f000-052d-4620-a60e-7a61b0e296a1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 32400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"12b79a47-2ce0-4d60-b044-d0463df010eb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"12b79a47-2ce0-4d60-b044-d0463df010eb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 32500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b50edc01-cfe7-47e7-a109-0c558c69dad0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b50edc01-cfe7-47e7-a109-0c558c69dad0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 32600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 32700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d44f3e3b-7946-40f2-a1d3-1b5ad54b3144\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d44f3e3b-7946-40f2-a1d3-1b5ad54b3144\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 32800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 32900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8162c0b0-7288-411d-8f15-748a352b2de5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8162c0b0-7288-411d-8f15-748a352b2de5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 33000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"0e341afb-b777-40b4-979f-d35f7bac5c84\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"0e341afb-b777-40b4-979f-d35f7bac5c84\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 33100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"483523fc-53a7-4912-9316-c98b1cb52cfd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"483523fc-53a7-4912-9316-c98b1cb52cfd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 33200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"4fdb6fc5-ca53-4504-9705-6c71e8b31d8c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"4fdb6fc5-ca53-4504-9705-6c71e8b31d8c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 33300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 33400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 33500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 33600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"1973a448-ca5e-45df-815d-1ce92693aa61\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"1973a448-ca5e-45df-815d-1ce92693aa61\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 33700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 33800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b67b608f-00a9-41e0-a123-d1715d1b4ecf\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b67b608f-00a9-41e0-a123-d1715d1b4ecf\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 33900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"2ce838f1-6be4-4626-8e14-969d8ef2f361\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"2ce838f1-6be4-4626-8e14-969d8ef2f361\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 34000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"4ed33424-caac-4e3a-818c-d1ae4992de54\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"4ed33424-caac-4e3a-818c-d1ae4992de54\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 34100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 34200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 34300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 34400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 34500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"19a56e6e-26f3-4682-8f55-391918afada6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"19a56e6e-26f3-4682-8f55-391918afada6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 34600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b0b43411-dea3-47f5-b6c6-91df8847ad67\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b0b43411-dea3-47f5-b6c6-91df8847ad67\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 34700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 34800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 34900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 35000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 35100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e9af05ba-7755-4c4d-9ebf-1bb7e1834a9f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"e9af05ba-7755-4c4d-9ebf-1bb7e1834a9f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 35200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"17e4e66e-c058-4b97-89bd-6e665b1510c9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"17e4e66e-c058-4b97-89bd-6e665b1510c9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 35300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b4ff8f13-b17a-49c4-8cf7-fba6112883dd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b4ff8f13-b17a-49c4-8cf7-fba6112883dd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 35400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8aa87486-21ec-4496-ba49-273bd9baa395\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8aa87486-21ec-4496-ba49-273bd9baa395\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 35500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d8ca00f1-2d22-424c-8fea-04e9aeb46c44\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d8ca00f1-2d22-424c-8fea-04e9aeb46c44\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 35600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"ba09849b-399c-4201-adb4-2786300ce143\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"ba09849b-399c-4201-adb4-2786300ce143\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 35700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 35800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 35900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 36000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"ae97ec4b-9226-403f-9195-6d5d71c7be64\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"ae97ec4b-9226-403f-9195-6d5d71c7be64\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 36100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"98c7c69c-7879-4738-9ef6-b2da6271a094\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"98c7c69c-7879-4738-9ef6-b2da6271a094\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 36200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"facffeb2-2921-4d5e-b7ee-96d3962f3978\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"facffeb2-2921-4d5e-b7ee-96d3962f3978\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 36300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a44f033b-2613-4460-b8b0-8985a0c947a7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a44f033b-2613-4460-b8b0-8985a0c947a7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 36400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"def04ca1-ed00-417c-bfa4-e3a461c87987\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"def04ca1-ed00-417c-bfa4-e3a461c87987\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 36500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 36600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 36700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 36800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 36900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 37000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 37100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 37200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6943edf8-c2d4-4029-bbb9-a827ff8963a1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6943edf8-c2d4-4029-bbb9-a827ff8963a1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 37300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"4fd536db-7b92-45b2-a511-8773e66a685d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"4fd536db-7b92-45b2-a511-8773e66a685d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 37400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"0dcfebda-aa2e-4b32-bb81-686814544b55\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"0dcfebda-aa2e-4b32-bb81-686814544b55\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 37500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 37600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 37700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"2f2bae98-caf2-4c26-8d63-13c84ebcaa94\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"2f2bae98-caf2-4c26-8d63-13c84ebcaa94\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 37800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c6cf22a3-8671-478c-9716-56c9a6e0dcfb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c6cf22a3-8671-478c-9716-56c9a6e0dcfb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 37900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 38000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 38100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 38200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 38300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 38400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"34b2a200-cd30-4b91-8ecb-1d152e549f6b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"34b2a200-cd30-4b91-8ecb-1d152e549f6b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 38500
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 38600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"cc69feaa-1c0a-48e6-a5c6-ebf2ff9421fe\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"cc69feaa-1c0a-48e6-a5c6-ebf2ff9421fe\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 38700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 38800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8dae2889-dd22-48c7-bbf6-696ee516aece\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8dae2889-dd22-48c7-bbf6-696ee516aece\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 38900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 39000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 39100
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"2db20a20-252d-4cb5-a97d-f160f18c2cb7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"2db20a20-252d-4cb5-a97d-f160f18c2cb7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 39200
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"44d9eac9-0c76-4fff-937a-a44eee8e9c51\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"44d9eac9-0c76-4fff-937a-a44eee8e9c51\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 39300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 39400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 39500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7d4788a8-2eb4-495e-8992-88c41d11d5b7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7d4788a8-2eb4-495e-8992-88c41d11d5b7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 39600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 39700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 39800
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 39900
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3ac8116c-6f38-46e0-8c1c-065e9171f07a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"3ac8116c-6f38-46e0-8c1c-065e9171f07a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 40000
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 40100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 40200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 40300
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b829adc2-afc7-4fea-a4be-c5c093d38ef1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"b829adc2-afc7-4fea-a4be-c5c093d38ef1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 40400
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 40500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6d16ce60-11c7-4e3c-9958-3498c7a51fc1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"6d16ce60-11c7-4e3c-9958-3498c7a51fc1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 40600
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 40700
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 40800
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c363053c-393c-47fb-9e66-7e0ee9eaf3b9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"c363053c-393c-47fb-9e66-7e0ee9eaf3b9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 40900
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 41000
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8f06e2a9-3b66-481a-aebb-c24b4d9e1f9d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"8f06e2a9-3b66-481a-aebb-c24b4d9e1f9d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 41100
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 41200
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 41300
}
{
  "sandboxLog": "",
  "lambdaLog": "product name: STARFRUIT\nstarting_position: 0\nSTARFRUITPast Market Data\n<class 'tuple'>\n(5003.0, 13)\n(5003.0, 1)\n(5002.0, 8)\n(5002.0, 1)\n(5002.0, 1)\n(4997.0, 1)\n(4997.0, 1)\nproduct name: AMETHYSTS\nstarting_position: 0\nAMETHYSTSPast Market Data\n<class 'tuple'>\n(10004.0, 1)\n(9996.0, 2)\n(10002.0, 1)\n(10002.0, 1)\n(10002.0, 1)\n(9998.0, 1)\n(9998.0, 1)",
  "timestamp": 41400
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"bb0e0a42-68a9-42a4-90c4-b9f1db7847f6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"bb0e0a42-68a9-42a4-90c4-b9f1db7847f6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 41500
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d04307fd-e278-4e2d-83aa-e37ae5cf3ef2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"d04307fd-e278-4e2d-83aa-e37ae5cf3ef2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 41600
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7be4f465-4305-4c4e-a32b-b1488f410026\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"7be4f465-4305-4c4e-a32b-b1488f410026\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 41700
}
{
  "sandboxLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a8cc36c0-06eb-4cb5-9063-90a291a65e9f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"unsupported operand type(s) for +: 'int' and 'types.GenericAlias'\", \"errorType\": \"TypeError\", \"requestId\": \"a8cc36c0-06eb-4cb5-9063-90a291a65e9f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 180, in run\\n    current_sma = self.calculate_sma(past_trades.market_data[product], price)\\n\", \"  File \\\"/var/task/trader.py\\\", line 45, in calculate_sma\\n    past_trades_sum_price = sum(data[self.PD_PRICE_INDEX] for data in past_market_data)\\n\"]}",
  "timestamp": 41800
}



Activities log:
day;timestamp;product;bid_price_1;bid_volume_1;bid_price_2;bid_volume_2;bid_price_3;bid_volume_3;ask_price_1;ask_volume_1;ask_price_2;ask_volume_2;ask_price_3;ask_volume_3;mid_price;profit_and_loss
-2;0;AMETHYSTS;10002;1;9996;2;9995;29;10004;2;10005;29;;;10003.0;0.0
-2;0;STARFRUIT;5002;1;4997;31;;;5003;31;;;;;5002.5;0.0
-2;100;AMETHYSTS;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;0.0
-2;100;STARFRUIT;4997;24;;;;;5003;2;5004;22;;;5000.0;0.0
-2;200;STARFRUIT;4997;2;4996;20;;;5003;20;;;;;5000.0;0.0
-2;200;AMETHYSTS;9995;20;;;;;10005;20;;;;;10000.0;0.0
-2;300;AMETHYSTS;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;0.0
-2;300;STARFRUIT;4996;31;;;;;5003;31;;;;;4999.5;0.0
-2;400;AMETHYSTS;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;0.0
-2;400;STARFRUIT;4995;27;;;;;5002;27;;;;;4998.5;0.0
-2;500;AMETHYSTS;9995;30;;;;;10002;4;10005;30;;;9998.5;0.0
-2;500;STARFRUIT;4996;30;;;;;5003;30;;;;;4999.5;0.0
-2;600;STARFRUIT;4999;5;4997;6;4996;25;5003;25;;;;;5001.0;0.0
-2;600;AMETHYSTS;10000;5;9995;25;;;10005;25;;;;;10002.5;0.0
-2;700;AMETHYSTS;9995;23;;;;;10005;23;;;;;10000.0;0.0
-2;700;STARFRUIT;4997;2;4996;23;;;5003;23;;;;;5000.0;0.0
-2;800;AMETHYSTS;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;0.0
-2;800;STARFRUIT;4997;30;;;;;5003;1;5004;29;;;5000.0;0.0
-2;900;AMETHYSTS;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;0.0
-2;900;STARFRUIT;4997;23;;;;;5003;1;5004;22;;;5000.0;0.0
-2;1000;STARFRUIT;4996;26;;;;;5001;6;5003;26;;;4998.5;0.0
-2;1000;AMETHYSTS;9995;26;;;;;10005;26;;;;;10000.0;0.0
-2;1100;STARFRUIT;4998;6;4997;26;;;5004;26;;;;;5001.0;0.0
-2;1100;AMETHYSTS;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;0.0
-2;1200;AMETHYSTS;9995;21;;;;;9998;1;10005;21;;;9996.5;0.0
-2;1200;STARFRUIT;4997;21;;;;;5002;8;5004;21;;;4999.5;0.0
-2;1300;STARFRUIT;4997;31;;;;;5003;1;5004;30;;;5000.0;0.0
-2;1300;AMETHYSTS;10002;1;9996;1;9995;30;10004;1;10005;30;;;10003.0;0.0
-2;1400;STARFRUIT;4997;3;4996;25;;;5003;26;;;;;5000.0;0.0
-2;1400;AMETHYSTS;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;0.0
-2;1500;STARFRUIT;4996;27;;;;;5003;27;;;;;4999.5;0.0
-2;1500;AMETHYSTS;9995;27;;;;;10005;27;;;;;10000.0;0.0
-2;1600;AMETHYSTS;9995;29;;;;;10005;29;;;;;10000.0;0.0
-2;1600;STARFRUIT;4996;29;;;;;5001;4;5003;29;;;4998.5;0.0
-2;1700;STARFRUIT;4997;22;;;;;5002;8;5003;2;5004;20;4999.5;0.0
-2;1700;AMETHYSTS;9996;2;9995;20;;;10002;1;10004;2;10005;20;9999.0;0.0
-2;1800;STARFRUIT;4997;1;4996;22;;;5003;23;;;;;5000.0;0.0
-2;1800;AMETHYSTS;10002;1;9996;1;9995;22;10004;1;10005;22;;;10003.0;0.0
-2;1900;STARFRUIT;4997;1;4996;28;;;5001;5;5003;29;;;4999.0;0.0
-2;1900;AMETHYSTS;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;0.0
-2;2000;AMETHYSTS;9996;2;9995;24;;;9998;1;10004;2;10005;24;9997.0;0.0
-2;2000;STARFRUIT;4996;26;;;;;5003;26;;;;;4999.5;0.0
-2;2100;STARFRUIT;4997;2;4996;25;;;5003;27;;;;;5000.0;0.0
-2;2100;AMETHYSTS;9996;2;9995;25;;;10002;3;10004;2;10005;25;9999.0;0.0
-2;2200;STARFRUIT;4997;1;4996;24;;;5001;7;5003;25;;;4999.0;0.0
-2;2200;AMETHYSTS;9998;8;9996;1;9995;24;10004;1;10005;24;;;10001.0;0.0
-2;2300;STARFRUIT;4997;32;;;;;5003;2;5004;30;;;5000.0;0.0
-2;2300;AMETHYSTS;9998;7;9996;2;9995;30;10004;2;10005;30;;;10001.0;0.0
-2;2400;AMETHYSTS;9995;29;;;;;10005;29;;;;;10000.0;0.0
-2;2400;STARFRUIT;4997;28;;;;;5004;29;;;;;5000.5;0.0
-2;2500;STARFRUIT;4997;3;4996;22;;;5003;23;;;;;5000.0;0.0
-2;2500;AMETHYSTS;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;0.0
-2;2600;STARFRUIT;4998;3;4997;23;;;5004;23;;;;;5001.0;0.0
-2;2600;AMETHYSTS;9995;23;;;;;10005;23;;;;;10000.0;0.0
-2;2700;STARFRUIT;4998;26;;;;;5005;26;;;;;5001.5;0.0
-2;2700;AMETHYSTS;9998;6;9995;26;;;10005;26;;;;;10001.5;0.0
-2;2800;AMETHYSTS;9995;25;;;;;10005;25;;;;;10000.0;0.0
-2;2800;STARFRUIT;4997;25;;;;;5004;25;;;;;5000.5;0.0
-2;2900;STARFRUIT;4996;26;;;;;5003;26;;;;;4999.5;0.0
-2;2900;AMETHYSTS;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;0.0
-2;3100;STARFRUIT;4997;3;4996;52;;;5001;5;5003;52;;;4999.0;0.0
-2;3100;AMETHYSTS;9998;1;9996;2;9995;50;10004;2;10005;50;;;10001.0;0.0
-2;3300;STARFRUIT;4997;2;4996;53;;;5001;5;5003;55;;;4999.0;0.0
-2;3300;AMETHYSTS;9996;3;9995;52;;;10004;3;10005;52;;;10000.0;0.0
-2;3500;STARFRUIT;4997;52;;;;;5003;2;5004;50;;;5000.0;0.0
-2;3500;AMETHYSTS;9996;2;9995;50;;;10004;2;10005;50;;;10000.0;0.0
-2;3700;STARFRUIT;4998;3;4997;45;;;5004;45;;;;;5001.0;0.0
-2;3700;AMETHYSTS;9996;1;9995;44;;;9998;3;10004;1;10005;44;9997.0;0.0
-2;3900;STARFRUIT;4998;2;4997;51;;;5003;1;5004;50;;;5000.5;0.0
-2;3900;AMETHYSTS;9998;1;9996;3;9995;48;10002;10;10004;3;10005;48;10000.0;0.0
-2;4000;AMETHYSTS;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;0.0
-2;4000;STARFRUIT;4997;32;;;;;5003;2;5004;30;;;5000.0;0.0
-2;4100;STARFRUIT;4997;29;;;;;5003;2;5004;27;;;5000.0;0.0
-2;4100;AMETHYSTS;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;0.0
-2;4200;STARFRUIT;4998;2;4997;24;;;5004;26;;;;;5001.0;0.0
-2;4200;AMETHYSTS;9996;2;9995;24;;;10002;4;10004;2;10005;24;9999.0;0.0
-2;5000;STARFRUIT;4997;169;4996;50;;;4998;1;5000;5;5002;3;4997.5;0.0
-2;5000;AMETHYSTS;9998;8;9996;8;9995;211;10000;6;10002;27;10004;8;9999.0;0.0
-2;5200;AMETHYSTS;9998;9;9996;2;9995;56;10004;2;10005;56;;;10001.0;0.0
-2;5200;STARFRUIT;4998;15;4997;57;;;5003;1;5004;57;;;5000.5;0.0
-2;5300;STARFRUIT;5002;1;4997;21;;;5004;21;;;;;5003.0;0.0
-2;5300;AMETHYSTS;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;0.0
-2;5500;AMETHYSTS;9995;48;;;;;10005;48;;;;;10000.0;0.0
-2;5500;STARFRUIT;4997;48;;;;;5002;6;5004;48;;;4999.5;0.0
-2;5600;STARFRUIT;5002;2;4998;28;;;5005;28;;;;;5003.5;0.0
-2;5600;AMETHYSTS;9995;28;;;;;10005;28;;;;;10000.0;0.0
-2;5900;AMETHYSTS;9998;2;9996;3;9995;85;10004;3;10005;85;;;10001.0;0.0
-2;5900;STARFRUIT;5000;5;4999;87;;;5005;2;5006;86;;;5002.5;0.0
-2;6300;AMETHYSTS;9996;4;9995;98;;;10004;4;10005;98;;;10000.0;0.0
-2;6300;STARFRUIT;4999;53;4998;53;;;5005;57;5006;45;;;5002.0;0.0
-2;6400;STARFRUIT;4999;1;4998;24;;;5005;25;;;;;5002.0;0.0
-2;6400;AMETHYSTS;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;0.0
-2;6500;STARFRUIT;4999;27;;;;;5005;1;5006;26;;;5002.0;0.0
-2;6500;AMETHYSTS;9996;1;9995;26;;;9998;1;10004;1;10005;26;9997.0;0.0
-2;7200;STARFRUIT;4999;7;4998;104;4997;86;5002;5;5003;2;5004;84;5000.5;0.0
-2;7200;AMETHYSTS;9998;7;9996;7;9995;183;10002;8;10004;7;10005;183;10000.0;0.0
-2;7300;STARFRUIT;4998;6;4997;29;;;5004;31;;;;;5001.0;0.0
-2;7300;AMETHYSTS;10002;1;9996;2;9995;29;10004;2;10005;29;;;10003.0;0.0
-2;7600;STARFRUIT;4998;47;4997;22;;;5004;23;5005;47;;;5001.0;0.0
-2;7600;AMETHYSTS;9996;3;9995;67;;;10002;10;10004;3;10005;67;9999.0;0.0
-2;7900;AMETHYSTS;9998;3;9996;2;9995;70;10004;2;10005;70;;;10001.0;0.0
-2;7900;STARFRUIT;4999;4;4998;28;4997;43;5004;46;5005;26;;;5001.5;0.0
-2;8000;STARFRUIT;4998;27;;;;;5003;8;5005;27;;;5000.5;0.0
-2;8000;AMETHYSTS;9995;27;;;;;10005;27;;;;;10000.0;0.0
-2;8100;AMETHYSTS;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;0.0
-2;8100;STARFRUIT;4998;23;;;;;5004;1;5005;22;;;5001.0;0.0
-2;8200;AMETHYSTS;9995;23;;;;;10005;23;;;;;10000.0;0.0
-2;8200;STARFRUIT;4997;23;;;;;5002;1;5004;23;;;4999.5;0.0
-2;8300;AMETHYSTS;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;0.0
-2;8300;STARFRUIT;4998;30;;;;;5005;30;;;;;5001.5;0.0
-2;8400;STARFRUIT;4998;28;;;;;5005;28;;;;;5001.5;0.0
-2;8400;AMETHYSTS;9995;28;;;;;10005;28;;;;;10000.0;0.0
-2;8500;AMETHYSTS;9998;10;9996;2;9995;29;10004;2;10005;29;;;10001.0;0.0
-2;8500;STARFRUIT;4998;2;4997;29;;;5004;31;;;;;5001.0;0.0
-2;9000;AMETHYSTS;9998;18;9996;3;9995;129;10004;3;10005;129;;;10001.0;0.0
-2;9000;STARFRUIT;4999;1;4998;33;4997;105;5002;4;5004;106;5005;26;5000.5;0.0
-2;9100;AMETHYSTS;9998;3;9996;2;9995;27;10004;2;10005;27;;;10001.0;0.0
-2;9100;STARFRUIT;4998;29;;;;;5005;29;;;;;5001.5;0.0
-2;9400;AMETHYSTS;9998;12;9996;3;9995;68;10004;3;10005;68;;;10001.0;0.0
-2;9400;STARFRUIT;4998;21;4997;50;;;5002;7;5004;51;5005;20;5000.0;0.0
-2;9500;AMETHYSTS;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;0.0
-2;9500;STARFRUIT;4998;4;4997;31;;;5004;31;;;;;5001.0;0.0
-2;9600;STARFRUIT;4997;31;;;;;5004;31;;;;;5000.5;0.0
-2;9600;AMETHYSTS;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;0.0
-2;9700;AMETHYSTS;9995;22;;;;;10002;1;10005;22;;;9998.5;0.0
-2;9700;STARFRUIT;4997;22;;;;;5004;22;;;;;5000.5;0.0
-2;9800;AMETHYSTS;9995;26;;;;;10005;26;;;;;10000.0;0.0
-2;9800;STARFRUIT;4997;26;;;;;5004;26;;;;;5000.5;0.0
-2;9900;AMETHYSTS;9995;25;;;;;10005;25;;;;;10000.0;0.0
-2;9900;STARFRUIT;5001;4;4996;25;;;5003;25;;;;;5002.0;0.0
-2;10100;STARFRUIT;4997;8;4996;29;4995;24;5002;25;5003;28;;;4999.5;0.0
-2;10100;AMETHYSTS;9996;1;9995;52;;;10002;3;10004;1;10005;52;9999.0;0.0
-2;10200;AMETHYSTS;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;0.0
-2;10200;STARFRUIT;4996;2;4995;26;;;5002;28;;;;;4999.0;0.0
-2;10500;STARFRUIT;5001;1;4997;9;4996;87;5003;87;;;;;5002.0;0.0
-2;10500;AMETHYSTS;10002;1;9998;8;9996;3;10004;3;10005;84;;;10003.0;0.0
-2;10700;STARFRUIT;4998;1;4997;59;;;5000;4;5002;4;5004;59;4999.0;0.0
-2;10700;AMETHYSTS;9998;8;9996;2;9995;57;10000;4;10004;2;10005;57;9999.0;0.0
-2;10800;STARFRUIT;4998;3;4997;24;;;5004;24;;;;;5001.0;0.0
-2;10800;AMETHYSTS;9998;5;9996;2;9995;22;10004;2;10005;22;;;10001.0;0.0
-2;10900;STARFRUIT;4999;7;4998;28;;;5005;28;;;;;5002.0;0.0
-2;10900;AMETHYSTS;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;0.0
-2;11100;STARFRUIT;5002;7;4998;21;4997;24;5004;24;5005;21;;;5003.0;0.0
-2;11100;AMETHYSTS;9998;3;9995;45;;;10002;7;10005;45;;;10000.0;0.0
-2;11200;STARFRUIT;4998;2;4997;21;;;5004;23;;;;;5001.0;0.0
-2;11200;AMETHYSTS;9996;2;9995;21;;;10002;7;10004;2;10005;21;9999.0;0.0
-2;12200;AMETHYSTS;9998;10;9996;13;9995;251;10000;4;10002;9;10004;13;9999.0;0.0
-2;12200;STARFRUIT;4999;1;4998;82;4997;186;5000;5;5002;8;5003;6;4999.5;0.0
-2;12400;STARFRUIT;4999;4;4998;27;4997;28;5004;29;5005;26;;;5001.5;0.0
-2;12400;AMETHYSTS;9998;6;9996;1;9995;54;10004;1;10005;54;;;10001.0;0.0
-2;12700;STARFRUIT;4998;43;4997;20;;;5004;22;5005;42;;;5001.0;0.0
-2;12700;AMETHYSTS;9996;2;9995;62;;;10004;2;10005;62;;;10000.0;0.0
-2;12800;STARFRUIT;4997;22;;;;;5004;22;;;;;5000.5;0.0
-2;12800;AMETHYSTS;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;0.0
-2;12900;STARFRUIT;4998;7;4997;29;;;5003;1;5004;28;;;5000.5;0.0
-2;12900;AMETHYSTS;9996;1;9995;28;;;10002;3;10004;1;10005;28;9999.0;0.0
-2;13000;AMETHYSTS;10002;1;9995;20;;;10005;20;;;;;10003.5;0.0
-2;13000;STARFRUIT;5002;1;4997;6;4996;20;5003;20;;;;;5002.5;0.0
-2;13400;AMETHYSTS;9998;2;9996;3;9995;101;10004;3;10005;101;;;10001.0;0.0
-2;13400;STARFRUIT;4998;6;4997;86;4996;25;5002;5;5003;26;5004;78;5000.0;0.0
-2;13500;STARFRUIT;4997;30;;;;;5002;8;5004;30;;;4999.5;0.0
-2;13500;AMETHYSTS;9995;30;;;;;10005;30;;;;;10000.0;0.0
-2;13800;AMETHYSTS;9996;3;9995;65;;;9998;4;10002;10;10004;3;9997.0;0.0
-2;13800;STARFRUIT;4999;5;4998;43;4997;24;5002;3;5004;28;5005;40;5000.5;0.0
-2;14000;STARFRUIT;4998;27;4997;27;;;5001;6;5003;4;5004;29;4999.5;0.0
-2;14000;AMETHYSTS;9998;5;9996;4;9995;47;10000;6;10004;4;10005;47;9999.0;0.0
-2;14100;STARFRUIT;4997;25;;;;;5002;1;5004;25;;;4999.5;0.0
-2;14100;AMETHYSTS;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;0.0
-2;14200;AMETHYSTS;9995;21;;;;;10005;21;;;;;10000.0;0.0
-2;14200;STARFRUIT;4997;21;;;;;4998;1;5004;21;;;4997.5;0.0
-2;14300;STARFRUIT;4997;29;;;;;5004;29;;;;;5000.5;0.0
-2;14300;AMETHYSTS;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;0.0
-2;14400;STARFRUIT;4997;30;;;;;5004;30;;;;;5000.5;0.0
-2;14400;AMETHYSTS;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;0.0
-2;14500;AMETHYSTS;9995;24;;;;;10002;1;10005;24;;;9998.5;0.0
-2;14500;STARFRUIT;4997;24;;;;;5004;24;;;;;5000.5;0.0
-2;14600;STARFRUIT;4997;28;;;;;5000;2;5004;28;;;4998.5;0.0
-2;14600;AMETHYSTS;9996;2;9995;26;;;10000;2;10004;2;10005;26;9998.0;0.0
-2;14800;STARFRUIT;4997;58;;;;;5004;58;;;;;5000.5;0.0
-2;14800;AMETHYSTS;9995;58;;;;;10002;13;10005;58;;;9998.5;0.0
-2;14900;AMETHYSTS;10000;4;9995;26;;;10005;26;;;;;10002.5;0.0
-2;14900;STARFRUIT;5000;4;4997;26;;;5004;26;;;;;5002.0;0.0
-2;16100;AMETHYSTS;9998;16;9996;13;9995;302;10000;3;10002;16;10004;13;9999.0;0.0
-2;16100;STARFRUIT;4998;35;4997;271;4996;24;5000;8;5002;10;5003;29;4999.0;0.0
-2;16900;AMETHYSTS;9998;4;9996;8;9995;202;10002;10;10004;8;10005;202;10000.0;0.0
-2;16900;STARFRUIT;4997;1;4996;154;4995;56;5002;62;5003;148;;;4999.5;0.0
-2;17000;STARFRUIT;4996;29;;;;;5003;29;;;;;4999.5;0.0
-2;17000;AMETHYSTS;9998;9;9995;29;;;10005;29;;;;;10001.5;0.0
-2;17100;AMETHYSTS;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;0.0
-2;17100;STARFRUIT;4996;23;;;;;5002;2;5003;21;;;4999.0;0.0
-2;17200;AMETHYSTS;9998;3;9996;2;9995;22;10004;2;10005;22;;;10001.0;0.0
-2;17200;STARFRUIT;4996;24;;;;;5003;24;;;;;4999.5;0.0
-2;17300;AMETHYSTS;9996;2;9995;23;;;10002;9;10004;2;10005;23;9999.0;0.0
-2;17300;STARFRUIT;4996;25;;;;;5001;6;5003;25;;;4998.5;0.0
-2;17400;STARFRUIT;4999;6;4996;28;;;5003;28;;;;;5001.0;0.0
-2;17400;AMETHYSTS;10000;6;9998;7;9995;28;10005;28;;;;;10002.5;0.0
-2;17500;AMETHYSTS;9995;26;;;;;10005;26;;;;;10000.0;0.0
-2;17500;STARFRUIT;4996;26;;;;;5003;26;;;;;4999.5;0.0
-2;17600;AMETHYSTS;9998;6;9995;30;;;10005;30;;;;;10001.5;0.0
-2;17600;STARFRUIT;4996;30;;;;;5003;30;;;;;4999.5;0.0
-2;17700;AMETHYSTS;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;0.0
-2;17700;STARFRUIT;5001;1;4996;2;4995;27;5002;29;;;;;5001.5;0.0
-2;17900;AMETHYSTS;9996;2;9995;47;;;10002;5;10004;2;10005;47;9999.0;0.0
-2;17900;STARFRUIT;4996;26;4995;23;;;5002;25;5003;24;;;4999.0;0.0
-2;18000;AMETHYSTS;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;0.0
-2;18000;STARFRUIT;4996;2;4995;25;;;5002;27;;;;;4999.0;0.0
-2;18100;AMETHYSTS;9995;20;;;;;10005;20;;;;;10000.0;0.0
-2;18100;STARFRUIT;4996;20;;;;;5003;20;;;;;4999.5;0.0
-2;18400;AMETHYSTS;9996;5;9995;71;;;10004;5;10005;71;;;10000.0;0.0
-2;18400;STARFRUIT;4995;75;;;;;4997;4;5000;5;5002;76;4996.0;0.0
-2;18800;AMETHYSTS;9996;2;9995;97;;;10000;1;10004;2;10005;97;9998.0;0.0
-2;18800;STARFRUIT;4996;70;4995;29;;;4998;1;5001;5;5002;31;4997.0;0.0
-2;19400;STARFRUIT;4996;58;4995;80;;;5002;85;5003;63;;;4999.0;0.0
-2;19400;AMETHYSTS;9998;1;9996;7;9995;141;10004;7;10005;141;;;10001.0;0.0
-2;19500;STARFRUIT;4995;23;;;;;5002;23;;;;;4998.5;0.0
-2;19500;AMETHYSTS;9995;23;;;;;10005;23;;;;;10000.0;0.0
-2;19600;AMETHYSTS;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;0.0
-2;19600;STARFRUIT;4997;2;4996;27;;;5003;29;;;;;5000.0;0.0
-2;19900;STARFRUIT;4997;3;4996;91;;;5001;7;5003;95;;;4999.0;0.0
-2;19900;AMETHYSTS;10002;1;9996;6;9995;89;10004;6;10005;89;;;10003.0;0.0
-2;20900;STARFRUIT;5000;1;4999;6;4997;9;5001;4;5002;48;5003;224;5000.5;0.0
-2;20900;AMETHYSTS;10000;5;9998;4;9996;8;10002;3;10004;8;10005;264;10001.0;0.0
-2;21000;STARFRUIT;4996;2;4995;26;;;5002;28;;;;;4999.0;0.0
-2;21000;AMETHYSTS;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;0.0
-2;21200;AMETHYSTS;9996;2;9995;44;;;9998;1;10004;2;10005;44;9997.0;0.0
-2;21200;STARFRUIT;4996;2;4995;44;;;5002;46;;;;;4999.0;0.0
-2;21400;STARFRUIT;4996;29;4995;29;;;5002;30;5003;28;;;4999.0;0.0
-2;21400;AMETHYSTS;9996;1;9995;57;;;10002;7;10004;1;10005;57;9999.0;0.0
-2;21500;STARFRUIT;5000;4;4996;21;;;5002;1;5003;20;;;5001.0;0.0
-2;21500;AMETHYSTS;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;0.0
-2;21700;STARFRUIT;4996;29;4995;29;;;5002;31;5003;27;;;4999.0;0.0
-2;21700;AMETHYSTS;10002;12;9998;8;9996;4;10004;4;10005;54;;;10003.0;0.0
-2;21800;STARFRUIT;4996;24;;;;;5003;24;;;;;4999.5;0.0
-2;21800;AMETHYSTS;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;0.0
-2;21900;STARFRUIT;4997;1;4996;21;;;5003;22;;;;;5000.0;0.0
-2;21900;AMETHYSTS;10002;3;9996;1;9995;21;10004;1;10005;21;;;10003.0;0.0
-2;22300;STARFRUIT;4997;73;4996;21;;;5003;21;5004;74;;;5000.0;0.0
-2;22300;AMETHYSTS;9998;6;9996;4;9995;91;10002;7;10004;4;10005;91;10000.0;0.0
-2;22400;AMETHYSTS;9996;2;9995;27;;;9998;1;10004;2;10005;27;9997.0;0.0
-2;22400;STARFRUIT;4996;29;;;;;5003;29;;;;;4999.5;0.0
-2;22500;STARFRUIT;4997;2;4996;29;;;5003;31;;;;;5000.0;0.0
-2;22500;AMETHYSTS;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;0.0
-2;22600;STARFRUIT;5000;6;4998;4;4997;22;5003;2;5004;20;;;5001.5;0.0
-2;22600;AMETHYSTS;10000;6;9998;6;9996;2;10004;2;10005;20;;;10002.0;0.0
-2;23000;STARFRUIT;4996;106;;;;;5002;1;5003;107;;;4999.0;0.0
-2;23000;AMETHYSTS;9996;6;9995;102;;;9998;2;10002;8;10004;6;9997.0;0.0
-2;23200;AMETHYSTS;9998;13;9996;2;9995;52;10004;2;10005;52;;;10001.0;0.0
-2;23200;STARFRUIT;4997;31;4996;23;;;5002;3;5003;23;5004;31;4999.5;0.0
-2;23700;STARFRUIT;4998;116;4997;23;;;5002;7;5003;4;5004;24;5000.0;0.0
-2;23700;AMETHYSTS;10002;1;9998;8;9996;6;10004;6;10005;134;;;10003.0;0.0
-2;23900;AMETHYSTS;9995;60;;;;;10005;60;;;;;10000.0;0.0
-2;23900;STARFRUIT;5003;1;5002;1;4998;1;5004;60;;;;;5003.5;0.0
-2;24000;STARFRUIT;4996;29;;;;;5003;29;;;;;4999.5;0.0
-2;24000;AMETHYSTS;9998;9;9995;29;;;10005;29;;;;;10001.5;0.0
-2;24300;AMETHYSTS;9996;5;9995;77;;;10002;7;10004;5;10005;77;9999.0;0.0
-2;24300;STARFRUIT;4996;82;;;;;5001;3;5003;82;;;4998.5;0.0
-2;24400;STARFRUIT;5002;1;4996;22;;;5003;22;;;;;5002.5;0.0
-2;24400;AMETHYSTS;10002;1;9998;4;9996;1;10004;1;10005;21;;;10003.0;0.0
-2;24800;STARFRUIT;4997;1;4996;74;4995;23;5001;2;5002;23;5003;75;4999.0;0.0
-2;24800;AMETHYSTS;9996;1;9995;97;;;9998;1;10004;1;10005;97;9997.0;0.0
-2;24900;STARFRUIT;4999;4;4995;23;;;5002;23;;;;;5000.5;0.0
-2;24900;AMETHYSTS;10002;1;9996;1;9995;22;10004;1;10005;22;;;10003.0;0.0
-2;25100;AMETHYSTS;10002;1;9995;48;;;10005;48;;;;;10003.5;0.0
-2;25100;STARFRUIT;4995;48;;;;;5000;4;5002;48;;;4997.5;0.0
-2;25600;STARFRUIT;5000;5;4996;3;4995;87;5001;45;5002;78;;;5000.5;0.0
-2;25600;AMETHYSTS;9996;6;9995;117;;;9998;11;10002;16;10004;6;9997.0;0.0
-2;25700;AMETHYSTS;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;0.0
-2;25700;STARFRUIT;4995;32;;;;;5000;6;5001;2;5002;30;4997.5;0.0
-2;26200;AMETHYSTS;10002;4;9998;7;9996;5;10004;5;10005;116;;;10003.0;0.0
-2;26200;STARFRUIT;4995;43;4994;70;;;5000;1;5001;73;5002;47;4997.5;0.0
-2;26300;AMETHYSTS;9996;1;9995;29;;;9998;1;10004;1;10005;29;9997.0;0.0
-2;26300;STARFRUIT;4994;30;;;;;5001;30;;;;;4997.5;0.0
-2;26600;AMETHYSTS;9996;3;9995;73;;;9998;1;10004;3;10005;73;9997.0;0.0
-2;26600;STARFRUIT;4994;11;4993;76;;;5000;76;;;;;4997.0;0.0
-2;27200;STARFRUIT;4993;23;4992;35;4991;103;4996;2;4998;108;4999;31;4994.5;0.0
-2;27200;AMETHYSTS;9998;4;9996;3;9995;154;10004;3;10005;154;;;10001.0;0.0
-2;27300;AMETHYSTS;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;0.0
-2;27300;STARFRUIT;4996;1;4991;31;;;4997;2;4998;29;;;4996.5;0.0
-2;27500;AMETHYSTS;9996;1;9995;43;;;10004;1;10005;43;;;10000.0;0.0
-2;27500;STARFRUIT;4992;23;4991;21;;;4997;6;4998;22;4999;22;4994.5;0.0
-2;28100;STARFRUIT;4993;1;4992;159;;;4997;2;4998;2;4999;157;4995.0;0.0
-2;28100;AMETHYSTS;9998;16;9996;6;9995;153;10002;4;10004;6;10005;153;10000.0;0.0
-2;28200;AMETHYSTS;9996;1;9995;25;;;9998;2;10004;1;10005;25;9997.0;0.0
-2;28200;STARFRUIT;4992;26;;;;;4997;5;4999;26;;;4994.5;0.0
-2;28300;STARFRUIT;4993;1;4992;23;;;4994;2;4999;24;;;4993.5;0.0
-2;28300;AMETHYSTS;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;0.0
-2;28600;AMETHYSTS;10002;1;9998;10;9996;4;10004;4;10005;67;;;10003.0;0.0
-2;28600;STARFRUIT;4992;1;4991;69;;;4996;8;4998;71;;;4994.0;0.0
-2;28700;STARFRUIT;4990;30;;;;;4997;30;;;;;4993.5;0.0
-2;28700;AMETHYSTS;9995;30;;;;;10005;30;;;;;10000.0;0.0
-2;28800;STARFRUIT;4990;27;;;;;4997;27;;;;;4993.5;0.0
-2;28800;AMETHYSTS;9995;27;;;;;10005;27;;;;;10000.0;0.0
-2;28900;STARFRUIT;4990;5;4989;21;;;4996;22;;;;;4993.0;0.0
-2;28900;AMETHYSTS;9998;7;9996;1;9995;21;10004;1;10005;21;;;10001.0;0.0
-2;29000;AMETHYSTS;9995;24;;;;;10005;24;;;;;10000.0;0.0
-2;29000;STARFRUIT;4989;24;;;;;4990;1;4996;24;;;4989.5;0.0
-2;29600;STARFRUIT;4992;2;4991;150;4990;28;4995;2;4996;4;4997;59;4993.5;0.0
-2;29600;AMETHYSTS;9996;10;9995;166;;;9998;1;10002;1;10004;10;9997.0;0.0
-2;29900;STARFRUIT;4992;2;4991;34;4990;52;4995;1;4997;53;4998;25;4993.5;0.0
-2;29900;AMETHYSTS;9998;6;9996;2;9995;76;10002;4;10004;2;10005;76;10000.0;0.0
-2;30200;AMETHYSTS;9998;3;9996;5;9995;78;10004;5;10005;78;;;10001.0;0.0
-2;30200;STARFRUIT;4991;52;4990;31;;;4997;63;4998;20;;;4994.0;0.0
-2;30300;STARFRUIT;4996;1;4991;31;;;4998;31;;;;;4997.0;0.0
-2;30300;AMETHYSTS;9996;2;9995;29;;;10002;9;10004;2;10005;29;9999.0;0.0
-2;30400;STARFRUIT;4994;5;4991;31;;;4997;2;4998;29;;;4995.5;0.0
-2;30400;AMETHYSTS;10000;5;9996;2;9995;29;10002;8;10004;2;10005;29;10001.0;0.0
-2;30500;STARFRUIT;4991;22;;;;;4998;22;;;;;4994.5;0.0
-2;30500;AMETHYSTS;9998;5;9996;2;9995;20;10004;2;10005;20;;;10001.0;0.0
-2;30800;STARFRUIT;4993;3;4992;82;;;4998;3;4999;80;;;4995.5;0.0
-2;30800;AMETHYSTS;9996;3;9995;80;;;10002;4;10004;3;10005;80;9999.0;0.0
-2;30900;STARFRUIT;4991;30;;;;;4996;7;4998;30;;;4993.5;0.0
-2;30900;AMETHYSTS;9996;2;9995;28;;;10002;6;10004;2;10005;28;9999.0;0.0
-2;31000;AMETHYSTS;10000;4;9996;1;9995;22;10004;1;10005;22;;;10002.0;0.0
-2;31000;STARFRUIT;4995;4;4993;7;4992;23;4998;1;4999;22;;;4996.5;0.0
-2;31200;STARFRUIT;4992;60;;;;;4999;60;;;;;4995.5;0.0
-2;31200;AMETHYSTS;9996;4;9995;56;;;10002;6;10004;4;10005;56;9999.0;0.0
-2;31300;STARFRUIT;4992;24;;;;;4999;24;;;;;4995.5;0.0
-2;31300;AMETHYSTS;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;0.0
-2;31400;AMETHYSTS;9995;26;;;;;9998;1;10005;26;;;9996.5;0.0
-2;31400;STARFRUIT;4992;26;;;;;4999;26;;;;;4995.5;0.0
-2;31500;STARFRUIT;4993;5;4992;30;;;4999;30;;;;;4996.0;0.0
-2;31500;AMETHYSTS;9995;30;;;;;10005;30;;;;;10000.0;0.0
-2;31600;STARFRUIT;4997;1;4992;27;;;4998;27;;;;;4997.5;0.0
-2;31600;AMETHYSTS;9995;27;;;;;10005;27;;;;;10000.0;0.0
-2;31700;STARFRUIT;4991;24;;;;;4996;3;4998;24;;;4993.5;0.0
-2;31700;AMETHYSTS;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;0.0
-2;31800;AMETHYSTS;10000;6;9996;1;9995;25;10004;1;10005;25;;;10002.0;0.0
-2;31800;STARFRUIT;4993;6;4991;1;4990;25;4997;26;;;;;4995.0;0.0
-2;32000;STARFRUIT;4992;3;4991;28;4990;28;4997;28;4998;25;;;4994.5;0.0
-2;32000;AMETHYSTS;9998;3;9996;1;9995;52;10004;1;10005;52;;;10001.0;0.0
-2;32100;STARFRUIT;4991;29;;;;;4997;1;4998;28;;;4994.0;0.0
-2;32100;AMETHYSTS;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;0.0
-2;32200;STARFRUIT;4991;28;;;;;4997;1;4998;27;;;4994.0;0.0
-2;32200;AMETHYSTS;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;0.0
-2;32300;STARFRUIT;4991;25;;;;;4998;25;;;;;4994.5;0.0
-2;32300;AMETHYSTS;9995;25;;;;;10005;25;;;;;10000.0;0.0
-2;32700;STARFRUIT;4991;75;4990;30;;;4996;5;4997;34;4998;73;4993.5;0.0
-2;32700;AMETHYSTS;10002;1;9998;1;9996;4;10004;4;10005;103;;;10003.0;0.0
-2;32900;AMETHYSTS;9996;4;9995;55;;;10004;4;10005;55;;;10000.0;0.0
-2;32900;STARFRUIT;4991;4;4990;55;;;4997;59;;;;;4994.0;0.0
-2;33400;STARFRUIT;4991;48;4990;74;;;4996;4;4997;76;4998;56;4993.5;0.0
-2;33400;AMETHYSTS;9996;7;9995;126;;;10002;10;10004;7;10005;126;9999.0;0.0
-2;33500;STARFRUIT;4990;21;;;;;4997;21;;;;;4993.5;0.0
-2;33500;AMETHYSTS;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;0.0
-2;33600;STARFRUIT;4990;27;;;;;4997;27;;;;;4993.5;0.0
-2;33600;AMETHYSTS;10002;6;9995;27;;;10005;27;;;;;10003.5;0.0
-2;33800;STARFRUIT;4994;3;4991;9;4990;54;4996;2;4997;52;;;4995.0;0.0
-2;33800;AMETHYSTS;9996;2;9995;52;;;10002;1;10004;2;10005;52;9999.0;0.0
-2;34200;STARFRUIT;4992;2;4991;46;4990;53;4995;8;4996;1;4997;55;4993.5;0.0
-2;34200;AMETHYSTS;10002;1;9996;1;9995;99;10004;1;10005;99;;;10003.0;0.0
-2;34300;AMETHYSTS;10002;1;9996;1;9995;22;10004;1;10005;22;;;10003.0;0.0
-2;34300;STARFRUIT;4990;23;;;;;4997;23;;;;;4993.5;0.0
-2;34400;AMETHYSTS;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;0.0
-2;34400;STARFRUIT;4991;3;4990;25;;;4996;25;;;;;4993.5;0.0
-2;34500;AMETHYSTS;9995;30;;;;;10005;30;;;;;10000.0;0.0
-2;34500;STARFRUIT;4990;30;;;;;4991;5;4995;1;4997;30;4990.5;0.0
-2;34800;AMETHYSTS;9998;6;9996;2;9995;76;10004;2;10005;76;;;10001.0;0.0
-2;34800;STARFRUIT;4991;25;4990;52;;;4997;55;4998;23;;;4994.0;0.0
-2;34900;AMETHYSTS;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;0.0
-2;34900;STARFRUIT;4991;21;;;;;4998;21;;;;;4994.5;0.0
-2;35000;STARFRUIT;4997;1;4992;20;;;4999;20;;;;;4998.0;0.0
-2;35000;AMETHYSTS;10002;1;9995;20;;;10005;20;;;;;10003.5;0.0
-2;35100;AMETHYSTS;10002;3;9996;2;9995;29;10004;2;10005;29;;;10003.0;0.0
-2;35100;STARFRUIT;4992;31;;;;;4998;2;4999;29;;;4995.0;0.0
-2;35800;STARFRUIT;4993;83;4992;111;;;4994;2;4998;1;4999;109;4993.5;0.0
-2;35800;AMETHYSTS;9998;13;9996;8;9995;189;10002;7;10004;8;10005;189;10000.0;0.0
-2;35900;AMETHYSTS;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;0.0
-2;35900;STARFRUIT;4993;23;;;;;5000;23;;;;;4996.5;0.0
-2;36000;AMETHYSTS;9995;30;;;;;10002;5;10005;30;;;9998.5;0.0
-2;36000;STARFRUIT;4993;30;;;;;4998;3;5000;30;;;4995.5;0.0
-2;36600;STARFRUIT;4993;60;4992;96;;;4994;2;4997;5;4999;100;4993.5;0.0
-2;36600;AMETHYSTS;10002;7;9998;1;9996;6;10004;6;10005;147;;;10003.0;0.0
-2;36700;STARFRUIT;4992;21;;;;;4999;21;;;;;4995.5;0.0
-2;36700;AMETHYSTS;9995;21;;;;;10005;21;;;;;10000.0;0.0
-2;36800;AMETHYSTS;9995;30;;;;;10005;30;;;;;10000.0;0.0
-2;36800;STARFRUIT;4993;30;;;;;5000;30;;;;;4996.5;0.0
-2;36900;STARFRUIT;4992;27;;;;;4999;27;;;;;4995.5;0.0
-2;36900;AMETHYSTS;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;0.0
-2;37000;STARFRUIT;4991;25;;;;;4998;25;;;;;4994.5;0.0
-2;37000;AMETHYSTS;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;0.0
-2;37100;STARFRUIT;4992;4;4991;23;;;4998;23;;;;;4995.0;0.0
-2;37100;AMETHYSTS;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;0.0
-2;37200;AMETHYSTS;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;0.0
-2;37200;STARFRUIT;4992;4;4991;21;;;4998;21;;;;;4995.0;0.0
-2;37600;AMETHYSTS;9996;3;9995;104;;;9998;7;10002;11;10004;3;9997.0;0.0
-2;37600;STARFRUIT;4992;4;4991;52;4990;55;4997;79;4998;28;;;4994.5;0.0
-2;37700;STARFRUIT;4991;24;;;;;4998;24;;;;;4994.5;0.0
-2;37700;AMETHYSTS;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;0.0
-2;38000;AMETHYSTS;10002;1;9996;2;9995;80;10004;2;10005;80;;;10003.0;0.0
-2;38000;STARFRUIT;4991;81;;;;;4996;4;4998;82;;;4993.5;0.0
-2;38100;STARFRUIT;4991;28;;;;;4997;2;4998;26;;;4994.0;0.0
-2;38100;AMETHYSTS;9996;2;9995;26;;;10002;2;10004;2;10005;26;9999.0;0.0
-2;38200;STARFRUIT;4991;28;;;;;4997;1;4998;27;;;4994.0;0.0
-2;38200;AMETHYSTS;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;0.0
-2;38300;STARFRUIT;4991;26;;;;;4998;26;;;;;4994.5;0.0
-2;38300;AMETHYSTS;9998;5;9995;26;;;10005;26;;;;;10001.5;0.0
-2;38400;AMETHYSTS;9996;1;9995;23;;;10000;6;10004;1;10005;23;9998.0;0.0
-2;38400;STARFRUIT;4991;1;4990;23;;;4993;6;4997;24;;;4992.0;0.0
-2;38600;STARFRUIT;4991;2;4990;49;;;4997;51;;;;;4994.0;0.0
-2;38600;AMETHYSTS;10002;1;9996;2;9995;49;10004;2;10005;49;;;10003.0;0.0
-2;38800;AMETHYSTS;9996;1;9995;40;;;10002;1;10004;1;10005;40;9999.0;0.0
-2;38800;STARFRUIT;4991;41;;;;;4993;2;4996;1;4998;41;4992.0;0.0
-2;39000;STARFRUIT;4992;2;4991;53;;;4996;7;4998;55;;;4994.0;0.0
-2;39000;AMETHYSTS;9996;2;9995;53;;;10002;9;10004;2;10005;53;9999.0;0.0
-2;39100;STARFRUIT;4992;25;;;;;4998;1;4999;24;;;4995.0;0.0
-2;39100;AMETHYSTS;9998;8;9996;1;9995;24;10004;1;10005;24;;;10001.0;0.0
-2;39400;STARFRUIT;4993;31;4992;57;;;4997;2;4998;5;4999;58;4995.0;0.0
-2;39400;AMETHYSTS;9996;2;9995;86;;;10004;2;10005;86;;;10000.0;0.0
-2;39500;STARFRUIT;4992;27;;;;;4997;3;4999;27;;;4994.5;0.0
-2;39500;AMETHYSTS;9995;27;;;;;9998;1;10002;2;10005;27;9996.5;0.0
-2;39700;STARFRUIT;4997;4;4993;4;4992;47;4998;2;4999;45;;;4997.5;0.0
-2;39700;AMETHYSTS;9996;2;9995;45;;;10004;2;10005;45;;;10000.0;0.0
-2;39800;STARFRUIT;4991;28;;;;;4998;28;;;;;4994.5;0.0
-2;39800;AMETHYSTS;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;0.0
-2;39900;STARFRUIT;4992;31;;;;;4998;1;4999;30;;;4995.0;0.0
-2;39900;AMETHYSTS;9996;1;9995;30;;;10002;4;10004;1;10005;30;9999.0;0.0
-2;40100;STARFRUIT;4992;24;4991;29;;;4998;31;4999;22;;;4995.0;0.0
-2;40100;AMETHYSTS;9996;2;9995;51;;;10002;8;10004;2;10005;51;9999.0;0.0
-2;40200;STARFRUIT;4992;29;;;;;4999;29;;;;;4995.5;0.0
-2;40200;AMETHYSTS;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;0.0
-2;40300;STARFRUIT;4992;22;;;;;4999;22;;;;;4995.5;0.0
-2;40300;AMETHYSTS;9995;22;;;;;9998;1;10005;22;;;9996.5;0.0
-2;40500;STARFRUIT;4992;53;;;;;4993;1;4999;53;;;4992.5;0.0
-2;40500;AMETHYSTS;10002;1;9996;3;9995;50;10004;3;10005;50;;;10003.0;0.0
-2;40700;STARFRUIT;4993;4;4992;48;;;4998;2;4999;46;;;4995.5;0.0
-2;40700;AMETHYSTS;9998;7;9996;4;9995;44;10004;4;10005;44;;;10001.0;0.0
-2;40800;AMETHYSTS;9995;27;;;;;10005;27;;;;;10000.0;0.0
-2;40800;STARFRUIT;4991;27;;;;;4998;27;;;;;4994.5;0.0
-2;41000;STARFRUIT;4991;49;;;;;4992;1;4996;3;4998;49;4991.5;0.0
-2;41000;AMETHYSTS;9998;10;9996;2;9995;47;10002;10;10004;2;10005;47;10000.0;0.0
-2;41200;STARFRUIT;4990;56;;;;;4991;1;4992;2;4997;56;4990.5;0.0
-2;41200;AMETHYSTS;9995;56;;;;;10005;56;;;;;10000.0;0.0
-2;41300;STARFRUIT;4991;1;4990;24;;;4995;4;4997;25;;;4993.0;0.0
-2;41300;AMETHYSTS;9998;2;9996;1;9995;24;10004;1;10005;24;;;10001.0;0.0
-2;41400;STARFRUIT;4991;2;4990;23;;;4993;4;4995;5;4997;25;4992.0;0.0
-2;41400;AMETHYSTS;9998;5;9996;2;9995;23;10000;4;10004;2;10005;23;9999.0;0.0




Trade History:
null